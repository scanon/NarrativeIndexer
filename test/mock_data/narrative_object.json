{"data": [{"data": {"cells": [{"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "Load Reads from FTP"}, "cellState": {"selected": true, "showTitle": false}}}, "source": "### Load Reads from FTP \n\nAcetate samples:"}, {"cell_type": "code", "execution_count": 1, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "aabbeb7e44f6988254a5477ec11e42584a5c39c1", "id": "kb_uploadmethods/load_paired_end_reads_from_URL", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "download_type", "target_property": "download_type"}, {"input_parameter": "fwd_file_url", "target_property": "fwd_file_url"}, {"input_parameter": "rev_file_url", "target_property": "rev_file_url"}, {"input_parameter": "sequencing_tech", "target_property": "sequencing_tech"}, {"input_parameter": "name", "target_property": "name"}, {"input_parameter": "urls_to_add", "target_property": "urls_to_add"}, {"constant_value": 1, "target_property": "interleaved"}, {"input_parameter": "single_genome", "target_property": "single_genome"}, {"input_parameter": "insert_size_mean", "target_property": "insert_size_mean"}, {"input_parameter": "insert_size_std_dev", "target_property": "insert_size_std_dev"}, {"input_parameter": "read_orientation_outward", "target_property": "read_orientation_outward"}], "kb_service_method": "upload_fastq_file", "kb_service_name": "kb_uploadmethods", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"service_method_output_path": ["0", "obj_ref"], "target_property": "obj_ref"}], "kb_service_url": "", "kb_service_version": "aabbeb7e44f6988254a5477ec11e42584a5c39c1"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["tgu2"], "categories": ["active", "upload"], "git_commit_hash": "aabbeb7e44f6988254a5477ec11e42584a5c39c1", "id": "kb_uploadmethods/load_paired_end_reads_from_URL", "input_types": [], "module_name": "kb_uploadmethods", "name": "Load Paired-End Reads From Web", "namespace": "kb_uploadmethods", "output_types": [], "subtitle": "Upload a Paired End Library into your Narrative", "tooltip": "Upload a Paired End Library into your Narrative", "ver": "0.1.1"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 0, "allow_multiple": 1, "description": "Fastq file URL and output Reads file name", "id": "urls_to_add", "optional": 0, "parameter_ids": ["fwd_file_url", "rev_file_url", "name", "single_genome", "insert_size_mean", "insert_size_std_dev", "read_orientation_outward"], "short_hint": "Fastq file URL and output Reads file name", "ui_name": "URL(s)", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": ["Direct Download"], "description": "Download type ('Direct Download Link', 'FTP Link', 'DropBox Public Shared Link',  'Google Drive Public Shared Link')", "disabled": 0, "dropdown_options": {"options": [{"display": "Direct Download Link", "index": 0, "value": "Direct Download"}, {"display": "FTP Link", "index": 1, "value": "FTP"}, {"display": "DropBox Public Shared Link", "index": 2, "value": "DropBox"}, {"display": "Google Drive Public Shared Link", "index": 3, "value": "Google Drive"}]}, "field_type": "dropdown", "id": "download_type", "optional": 0, "short_hint": "Download type ('Direct Download Link', 'FTP Link', 'DropBox Public Shared Link',  'Google Drive Public Shared Link')", "ui_class": "parameter", "ui_name": "Download Type"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2", "disabled": 0, "field_type": "text", "id": "fwd_file_url", "optional": 0, "short_hint": "Download link containing a single end library in FASTA/FASTQ format", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Forward/Left Fasta/Fastq URL"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2", "disabled": 0, "field_type": "text", "id": "rev_file_url", "optional": 0, "short_hint": "Second download link containing a single end library in FASTA/FASTQ format", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Reverse/Right Fasta/Fastq URL"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["Illumina"], "description": "The name of the sequencing technology used to create the reads file", "disabled": 0, "dropdown_options": {"options": [{"display": "Illumina", "index": 0, "value": "Illumina"}, {"display": "PacBio CLR", "index": 1, "value": "PacBio CLR"}, {"display": "PacBio CCS", "index": 2, "value": "PacBio CCS"}, {"display": "IonTorrent", "index": 3, "value": "IonTorrent"}, {"display": "NanoPore", "index": 4, "value": "NanoPore"}, {"display": "Unknown", "index": 5, "value": "Unknown"}]}, "field_type": "dropdown", "id": "sequencing_tech", "optional": 0, "short_hint": "The name of the sequencing technology used to create the reads file", "ui_class": "parameter", "ui_name": "Sequencing Technology"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Provide a name for the output object that will be created by this upload", "disabled": 0, "field_type": "text", "id": "name", "optional": 0, "short_hint": "Provide a name for the output object that will be created by this upload", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Output Object File Name"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "The mean (average) insert length", "disabled": 0, "field_type": "text", "id": "insert_size_mean", "optional": 1, "short_hint": "The mean (average) insert length", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "float"}, "ui_class": "parameter", "ui_name": "Mean Insert Size"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "The standard deviation of insert lengths", "disabled": 0, "field_type": "text", "id": "insert_size_std_dev", "optional": 1, "short_hint": "The standard deviation of insert lengths", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "float"}, "ui_class": "parameter", "ui_name": "Stdev Of Insert Size"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Whether reads in a pair point outward", "disabled": 0, "field_type": "checkbox", "id": "read_orientation_outward", "optional": 1, "short_hint": "Whether reads in a pair point outward", "ui_class": "parameter", "ui_name": "Reads Orientation Outward"}, {"advanced": 0, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Whether the reads are from a single genome or a metagenome.", "disabled": 0, "field_type": "checkbox", "id": "single_genome", "optional": 0, "short_hint": "Whether the reads are from a single genome or a metagenome.", "ui_class": "parameter", "ui_name": "Single Genome"}], "widgets": {"input": "null", "output": "no-display"}}, "tag": "dev", "version": "0.1.1"}, "exec": {"jobState": {"awe_job_id": "b3113222-1343-47ae-b448-44a25fb0f8b7", "canceled": 0, "cancelled": 0, "cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "creation_time": 1485470035038, "exec_start_time": 1485470038232, "finish_time": 1485480449807, "finished": 1, "job_id": "588a7952e4b00a3e267bca2d", "job_state": "completed", "result": [{"obj_ref": "16837/4/1,16837/7/1,16837/8/1"}], "run_id": null, "status": ["2017-01-27T01:27:29+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1485480452714, "launchState": {"cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "event": "launched_job", "event_at": "2017-01-26T22:33:55.047181Z", "job_id": "588a7952e4b00a3e267bca2d", "run_id": "f9a78687-505e-4a66-b4a7-519be610f588"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-01-26T22:33:54.397Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-01-26T22:33:55.084Z"}, {"data": {"jobState": {"awe_job_id": "b3113222-1343-47ae-b448-44a25fb0f8b7", "awe_job_state": "queued", "cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "creation_time": 1485470035038, "finished": 0, "job_id": "588a7952e4b00a3e267bca2d", "job_state": "queued", "position": 1, "run_id": "f9a78687-505e-4a66-b4a7-519be610f588", "status": ["2017-01-26T22:33:54+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T22:33:55.561Z"}, {"data": {"jobState": {"awe_job_id": "b3113222-1343-47ae-b448-44a25fb0f8b7", "awe_job_state": "in-progress", "cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "creation_time": 1485470035038, "finished": 0, "job_id": "588a7952e4b00a3e267bca2d", "job_state": "queued", "position": 1, "run_id": "f9a78687-505e-4a66-b4a7-519be610f588", "status": ["2017-01-26T22:33:54+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T22:33:56.419Z"}, {"data": {"jobState": {"awe_job_id": "b3113222-1343-47ae-b448-44a25fb0f8b7", "awe_job_state": "in-progress", "cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "creation_time": 1485470035038, "exec_start_time": 1485470038232, "finished": 0, "job_id": "588a7952e4b00a3e267bca2d", "job_state": "in-progress", "run_id": "f9a78687-505e-4a66-b4a7-519be610f588", "status": ["2017-01-26T22:33:58+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T22:34:06.298Z"}, {"data": {"jobState": {"awe_job_id": "b3113222-1343-47ae-b448-44a25fb0f8b7", "awe_job_state": "in-progress", "cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "creation_time": 1485470035038, "exec_start_time": 1485470038232, "finished": 0, "job_id": "588a7952e4b00a3e267bca2d", "job_state": "in-progress", "run_id": null, "status": ["2017-01-26T22:33:58+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T01:08:03.781Z"}, {"data": {"jobState": {"awe_job_id": "b3113222-1343-47ae-b448-44a25fb0f8b7", "canceled": 0, "cancelled": 0, "cell_id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "creation_time": 1485470035038, "exec_start_time": 1485470038232, "finish_time": 1485480449807, "finished": 1, "job_id": "588a7952e4b00a3e267bca2d", "job_state": "completed", "result": [{"obj_ref": "16837/4/1,16837/7/1,16837/8/1"}], "run_id": null, "status": ["2017-01-27T01:27:29+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T01:27:32.714Z"}], "outputWidgetInfo": {"name": "no-display", "params": {"obj_ref": "16837/4/1,16837/7/1,16837/8/1", "report_name": null, "report_ref": null, "workspace_name": "jplfaria:1485469584244"}, "tag": "dev"}}, "fsm": {"currentState": {"mode": "success"}}, "newAppName": "Import Paired-End Reads from Web - v1.0.12", "outdated": true, "output": {"byJob": {"588a7952e4b00a3e267bca2d": {"cell": {"created": false}, "createdAt": "Sun, 24 Sep 2017 00:51:39 GMT", "params": {"download_type": "FTP", "sequencing_tech": "Illumina", "urls_to_add": [{"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate1/Acctate1_ATCACG_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "acetate_sample_1.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate1/Acctate1_ATCACG_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate2/Acctate2_CGATGT_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "acetate_sample_2.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate2/Acctate2_CGATGT_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate3/Acctate3_TTAGGC_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "acetate_sample_3.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate3/Acctate3_TTAGGC_L003_R2_001.fastq.gz", "single_genome": 1}]}}}}, "params": {"download_type": "FTP", "sequencing_tech": "Illumina", "urls_to_add": [{"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate1/Acctate1_ATCACG_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "acetate_sample_1.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate1/Acctate1_ATCACG_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate2/Acctate2_CGATGT_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "acetate_sample_2.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate2/Acctate2_CGATGT_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate3/Acctate3_TTAGGC_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "acetate_sample_3.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate3/Acctate3_TTAGGC_L003_R2_001.fastq.gz", "single_genome": 1}]}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Thu, 26 Jan 2017 22:28:02 GMT", "id": "2466712a-fd6f-40dc-bfa7-5ea8105bbe14", "info": {"label": "more...", "url": "/#appcatalog/app/kb_uploadmethods/load_paired_end_reads_from_URL/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Upload a Paired End Library into your Narrative", "title": "Load Paired-End Reads From Web"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/load_paired_end_reads_from_URL\",\n    {\n        \"download_type\": \"FTP\",\n        \"sequencing_tech\": \"Illumina\",\n        \"urls_to_add\": [{\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate1/Acctate1_ATCACG_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate1/Acctate1_ATCACG_L003_R2_001.fastq.gz\",\n        \"name\": \"acetate_sample_1.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }, {\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate2/Acctate2_CGATGT_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate2/Acctate2_CGATGT_L003_R2_001.fastq.gz\",\n        \"name\": \"acetate_sample_2.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }, {\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate3/Acctate3_TTAGGC_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Acctate3/Acctate3_TTAGGC_L003_R2_001.fastq.gz\",\n        \"name\": \"acetate_sample_3.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }]\n    },\n    tag=\"dev\",\n    version=\"aabbeb7e44f6988254a5477ec11e42584a5c39c1\",\n    cell_id=\"2466712a-fd6f-40dc-bfa7-5ea8105bbe14\",\n    run_id=\"f9a78687-505e-4a66-b4a7-519be610f588\"\n)"}, {"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "glucose samples"}, "cellState": {"selected": false, "showTitle": false}}}, "source": "glucose samples"}, {"cell_type": "code", "execution_count": 4, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "aabbeb7e44f6988254a5477ec11e42584a5c39c1", "id": "kb_uploadmethods/load_paired_end_reads_from_URL", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "download_type", "target_property": "download_type"}, {"input_parameter": "fwd_file_url", "target_property": "fwd_file_url"}, {"input_parameter": "rev_file_url", "target_property": "rev_file_url"}, {"input_parameter": "sequencing_tech", "target_property": "sequencing_tech"}, {"input_parameter": "name", "target_property": "name"}, {"input_parameter": "urls_to_add", "target_property": "urls_to_add"}, {"constant_value": 1, "target_property": "interleaved"}, {"input_parameter": "single_genome", "target_property": "single_genome"}, {"input_parameter": "insert_size_mean", "target_property": "insert_size_mean"}, {"input_parameter": "insert_size_std_dev", "target_property": "insert_size_std_dev"}, {"input_parameter": "read_orientation_outward", "target_property": "read_orientation_outward"}], "kb_service_method": "upload_fastq_file", "kb_service_name": "kb_uploadmethods", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"service_method_output_path": ["0", "obj_ref"], "target_property": "obj_ref"}], "kb_service_url": "", "kb_service_version": "aabbeb7e44f6988254a5477ec11e42584a5c39c1"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["tgu2"], "categories": ["active", "upload"], "git_commit_hash": "aabbeb7e44f6988254a5477ec11e42584a5c39c1", "id": "kb_uploadmethods/load_paired_end_reads_from_URL", "input_types": [], "module_name": "kb_uploadmethods", "name": "Load Paired-End Reads From Web", "namespace": "kb_uploadmethods", "output_types": [], "subtitle": "Upload a Paired End Library into your Narrative", "tooltip": "Upload a Paired End Library into your Narrative", "ver": "0.1.1"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 0, "allow_multiple": 1, "description": "Fastq file URL and output Reads file name", "id": "urls_to_add", "optional": 0, "parameter_ids": ["fwd_file_url", "rev_file_url", "name", "single_genome", "insert_size_mean", "insert_size_std_dev", "read_orientation_outward"], "short_hint": "Fastq file URL and output Reads file name", "ui_name": "URL(s)", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": ["Direct Download"], "description": "Download type ('Direct Download Link', 'FTP Link', 'DropBox Public Shared Link',  'Google Drive Public Shared Link')", "disabled": 0, "dropdown_options": {"options": [{"display": "Direct Download Link", "index": 0, "value": "Direct Download"}, {"display": "FTP Link", "index": 1, "value": "FTP"}, {"display": "DropBox Public Shared Link", "index": 2, "value": "DropBox"}, {"display": "Google Drive Public Shared Link", "index": 3, "value": "Google Drive"}]}, "field_type": "dropdown", "id": "download_type", "optional": 0, "short_hint": "Download type ('Direct Download Link', 'FTP Link', 'DropBox Public Shared Link',  'Google Drive Public Shared Link')", "ui_class": "parameter", "ui_name": "Download Type"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2", "disabled": 0, "field_type": "text", "id": "fwd_file_url", "optional": 0, "short_hint": "Download link containing a single end library in FASTA/FASTQ format", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Forward/Left Fasta/Fastq URL"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2", "disabled": 0, "field_type": "text", "id": "rev_file_url", "optional": 0, "short_hint": "Second download link containing a single end library in FASTA/FASTQ format", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Reverse/Right Fasta/Fastq URL"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["Illumina"], "description": "The name of the sequencing technology used to create the reads file", "disabled": 0, "dropdown_options": {"options": [{"display": "Illumina", "index": 0, "value": "Illumina"}, {"display": "PacBio CLR", "index": 1, "value": "PacBio CLR"}, {"display": "PacBio CCS", "index": 2, "value": "PacBio CCS"}, {"display": "IonTorrent", "index": 3, "value": "IonTorrent"}, {"display": "NanoPore", "index": 4, "value": "NanoPore"}, {"display": "Unknown", "index": 5, "value": "Unknown"}]}, "field_type": "dropdown", "id": "sequencing_tech", "optional": 0, "short_hint": "The name of the sequencing technology used to create the reads file", "ui_class": "parameter", "ui_name": "Sequencing Technology"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Provide a name for the output object that will be created by this upload", "disabled": 0, "field_type": "text", "id": "name", "optional": 0, "short_hint": "Provide a name for the output object that will be created by this upload", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Output Object File Name"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "The mean (average) insert length", "disabled": 0, "field_type": "text", "id": "insert_size_mean", "optional": 1, "short_hint": "The mean (average) insert length", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "float"}, "ui_class": "parameter", "ui_name": "Mean Insert Size"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "The standard deviation of insert lengths", "disabled": 0, "field_type": "text", "id": "insert_size_std_dev", "optional": 1, "short_hint": "The standard deviation of insert lengths", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "float"}, "ui_class": "parameter", "ui_name": "Stdev Of Insert Size"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Whether reads in a pair point outward", "disabled": 0, "field_type": "checkbox", "id": "read_orientation_outward", "optional": 1, "short_hint": "Whether reads in a pair point outward", "ui_class": "parameter", "ui_name": "Reads Orientation Outward"}, {"advanced": 0, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Whether the reads are from a single genome or a metagenome.", "disabled": 0, "field_type": "checkbox", "id": "single_genome", "optional": 0, "short_hint": "Whether the reads are from a single genome or a metagenome.", "ui_class": "parameter", "ui_name": "Single Genome"}], "widgets": {"input": "null", "output": "no-display"}}, "tag": "dev", "version": "0.1.1"}, "exec": {"jobState": {"awe_job_id": "00623f0f-f3cc-4f03-9920-829311195e03", "canceled": 0, "cancelled": 0, "cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "creation_time": 1485470793347, "exec_start_time": 1485470797977, "finish_time": 1485487806969, "finished": 1, "job_id": "588a7c49e4b00a3e267bca30", "job_state": "completed", "result": [{"obj_ref": "16837/6/1,16837/11/1,16837/13/1"}], "run_id": null, "status": ["2017-01-27T03:30:06+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1485487814505, "launchState": {"cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "event": "launched_job", "event_at": "2017-01-26T22:46:33.356958Z", "job_id": "588a7c49e4b00a3e267bca30", "run_id": "d0082f56-a009-4834-ae73-78b6eabdb4da"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-01-26T22:46:32.918Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-01-26T22:46:33.740Z"}, {"data": {"jobState": {"awe_job_id": "00623f0f-f3cc-4f03-9920-829311195e03", "awe_job_state": "queued", "cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "creation_time": 1485470793347, "finished": 0, "job_id": "588a7c49e4b00a3e267bca30", "job_state": "queued", "position": 2, "run_id": "d0082f56-a009-4834-ae73-78b6eabdb4da", "status": ["2017-01-26T22:46:33+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T22:46:34.170Z"}, {"data": {"jobState": {"awe_job_id": "00623f0f-f3cc-4f03-9920-829311195e03", "awe_job_state": "in-progress", "cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "creation_time": 1485470793347, "finished": 0, "job_id": "588a7c49e4b00a3e267bca30", "job_state": "queued", "position": 2, "run_id": "d0082f56-a009-4834-ae73-78b6eabdb4da", "status": ["2017-01-26T22:46:33+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T22:46:36.919Z"}, {"data": {"jobState": {"awe_job_id": "00623f0f-f3cc-4f03-9920-829311195e03", "awe_job_state": "in-progress", "cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "creation_time": 1485470793347, "exec_start_time": 1485470797977, "finished": 0, "job_id": "588a7c49e4b00a3e267bca30", "job_state": "in-progress", "run_id": "d0082f56-a009-4834-ae73-78b6eabdb4da", "status": ["2017-01-26T22:46:37+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T22:46:47.156Z"}, {"data": {"jobState": {"awe_job_id": "00623f0f-f3cc-4f03-9920-829311195e03", "awe_job_state": "in-progress", "cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "creation_time": 1485470793347, "exec_start_time": 1485470797977, "finished": 0, "job_id": "588a7c49e4b00a3e267bca30", "job_state": "in-progress", "run_id": null, "status": ["2017-01-26T22:46:37+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T01:08:04.776Z"}, {"data": {"jobState": {"awe_job_id": "00623f0f-f3cc-4f03-9920-829311195e03", "canceled": 0, "cancelled": 0, "cell_id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "creation_time": 1485470793347, "exec_start_time": 1485470797977, "finish_time": 1485487806969, "finished": 1, "job_id": "588a7c49e4b00a3e267bca30", "job_state": "completed", "result": [{"obj_ref": "16837/6/1,16837/11/1,16837/13/1"}], "run_id": null, "status": ["2017-01-27T03:30:06+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T03:30:14.505Z"}], "outputWidgetInfo": {"name": "no-display", "params": {"obj_ref": "16837/6/1,16837/11/1,16837/13/1", "report_name": null, "report_ref": null, "workspace_name": "jplfaria:1485469584244"}, "tag": "dev"}}, "fsm": {"currentState": {"mode": "success"}}, "newAppName": "Import Paired-End Reads from Web - v1.0.12", "outdated": true, "output": {"byJob": {"588a7c49e4b00a3e267bca30": {"cell": {"created": false}, "createdAt": "Sun, 24 Sep 2017 00:51:39 GMT", "params": {"download_type": "FTP", "sequencing_tech": "Illumina", "urls_to_add": [{"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose1/Glucose1_TGACCA_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "glucose_sample_1.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose1/Glucose1_TGACCA_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose2/Glucose2_ACAGTG_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "glucose_sample_2.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose2/Glucose2_ACAGTG_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose3/Glucose3_GCCAAT_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "glucose_sample_3.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose3/Glucose3_GCCAAT_L003_R2_001.fastq.gz", "single_genome": 1}]}}}}, "params": {"download_type": "FTP", "sequencing_tech": "Illumina", "urls_to_add": [{"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose1/Glucose1_TGACCA_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "glucose_sample_1.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose1/Glucose1_TGACCA_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose2/Glucose2_ACAGTG_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "glucose_sample_2.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose2/Glucose2_ACAGTG_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose3/Glucose3_GCCAAT_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "glucose_sample_3.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose3/Glucose3_GCCAAT_L003_R2_001.fastq.gz", "single_genome": 1}]}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Thu, 26 Jan 2017 22:34:58 GMT", "id": "c88535c5-06ec-4027-ac1c-2b72055e93d3", "info": {"label": "more...", "url": "/#appcatalog/app/kb_uploadmethods/load_paired_end_reads_from_URL/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Upload a Paired End Library into your Narrative", "title": "Load Paired-End Reads From Web"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/load_paired_end_reads_from_URL\",\n    {\n        \"download_type\": \"FTP\",\n        \"sequencing_tech\": \"Illumina\",\n        \"urls_to_add\": [{\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose1/Glucose1_TGACCA_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose1/Glucose1_TGACCA_L003_R2_001.fastq.gz\",\n        \"name\": \"glucose_sample_1.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }, {\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose2/Glucose2_ACAGTG_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose2/Glucose2_ACAGTG_L003_R2_001.fastq.gz\",\n        \"name\": \"glucose_sample_2.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }, {\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose3/Glucose3_GCCAAT_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Glucose3/Glucose3_GCCAAT_L003_R2_001.fastq.gz\",\n        \"name\": \"glucose_sample_3.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }]\n    },\n    tag=\"dev\",\n    version=\"aabbeb7e44f6988254a5477ec11e42584a5c39c1\",\n    cell_id=\"c88535c5-06ec-4027-ac1c-2b72055e93d3\",\n    run_id=\"d0082f56-a009-4834-ae73-78b6eabdb4da\"\n)"}, {"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "pyridin samples"}, "cellState": {"selected": false, "showTitle": false}}}, "source": "pyridin samples"}, {"cell_type": "code", "execution_count": 7, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "aabbeb7e44f6988254a5477ec11e42584a5c39c1", "id": "kb_uploadmethods/load_paired_end_reads_from_URL", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "download_type", "target_property": "download_type"}, {"input_parameter": "fwd_file_url", "target_property": "fwd_file_url"}, {"input_parameter": "rev_file_url", "target_property": "rev_file_url"}, {"input_parameter": "sequencing_tech", "target_property": "sequencing_tech"}, {"input_parameter": "name", "target_property": "name"}, {"input_parameter": "urls_to_add", "target_property": "urls_to_add"}, {"constant_value": 1, "target_property": "interleaved"}, {"input_parameter": "single_genome", "target_property": "single_genome"}, {"input_parameter": "insert_size_mean", "target_property": "insert_size_mean"}, {"input_parameter": "insert_size_std_dev", "target_property": "insert_size_std_dev"}, {"input_parameter": "read_orientation_outward", "target_property": "read_orientation_outward"}], "kb_service_method": "upload_fastq_file", "kb_service_name": "kb_uploadmethods", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"service_method_output_path": ["0", "obj_ref"], "target_property": "obj_ref"}], "kb_service_url": "", "kb_service_version": "aabbeb7e44f6988254a5477ec11e42584a5c39c1"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["tgu2"], "categories": ["active", "upload"], "git_commit_hash": "aabbeb7e44f6988254a5477ec11e42584a5c39c1", "id": "kb_uploadmethods/load_paired_end_reads_from_URL", "input_types": [], "module_name": "kb_uploadmethods", "name": "Load Paired-End Reads From Web", "namespace": "kb_uploadmethods", "output_types": [], "subtitle": "Upload a Paired End Library into your Narrative", "tooltip": "Upload a Paired End Library into your Narrative", "ver": "0.1.1"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 0, "allow_multiple": 1, "description": "Fastq file URL and output Reads file name", "id": "urls_to_add", "optional": 0, "parameter_ids": ["fwd_file_url", "rev_file_url", "name", "single_genome", "insert_size_mean", "insert_size_std_dev", "read_orientation_outward"], "short_hint": "Fastq file URL and output Reads file name", "ui_name": "URL(s)", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": ["Direct Download"], "description": "Download type ('Direct Download Link', 'FTP Link', 'DropBox Public Shared Link',  'Google Drive Public Shared Link')", "disabled": 0, "dropdown_options": {"options": [{"display": "Direct Download Link", "index": 0, "value": "Direct Download"}, {"display": "FTP Link", "index": 1, "value": "FTP"}, {"display": "DropBox Public Shared Link", "index": 2, "value": "DropBox"}, {"display": "Google Drive Public Shared Link", "index": 3, "value": "Google Drive"}]}, "field_type": "dropdown", "id": "download_type", "optional": 0, "short_hint": "Download type ('Direct Download Link', 'FTP Link', 'DropBox Public Shared Link',  'Google Drive Public Shared Link')", "ui_class": "parameter", "ui_name": "Download Type"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2", "disabled": 0, "field_type": "text", "id": "fwd_file_url", "optional": 0, "short_hint": "Download link containing a single end library in FASTA/FASTQ format", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Forward/Left Fasta/Fastq URL"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2", "disabled": 0, "field_type": "text", "id": "rev_file_url", "optional": 0, "short_hint": "Second download link containing a single end library in FASTA/FASTQ format", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Reverse/Right Fasta/Fastq URL"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["Illumina"], "description": "The name of the sequencing technology used to create the reads file", "disabled": 0, "dropdown_options": {"options": [{"display": "Illumina", "index": 0, "value": "Illumina"}, {"display": "PacBio CLR", "index": 1, "value": "PacBio CLR"}, {"display": "PacBio CCS", "index": 2, "value": "PacBio CCS"}, {"display": "IonTorrent", "index": 3, "value": "IonTorrent"}, {"display": "NanoPore", "index": 4, "value": "NanoPore"}, {"display": "Unknown", "index": 5, "value": "Unknown"}]}, "field_type": "dropdown", "id": "sequencing_tech", "optional": 0, "short_hint": "The name of the sequencing technology used to create the reads file", "ui_class": "parameter", "ui_name": "Sequencing Technology"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Provide a name for the output object that will be created by this upload", "disabled": 0, "field_type": "text", "id": "name", "optional": 0, "short_hint": "Provide a name for the output object that will be created by this upload", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Output Object File Name"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "The mean (average) insert length", "disabled": 0, "field_type": "text", "id": "insert_size_mean", "optional": 1, "short_hint": "The mean (average) insert length", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "float"}, "ui_class": "parameter", "ui_name": "Mean Insert Size"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "The standard deviation of insert lengths", "disabled": 0, "field_type": "text", "id": "insert_size_std_dev", "optional": 1, "short_hint": "The standard deviation of insert lengths", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "float"}, "ui_class": "parameter", "ui_name": "Stdev Of Insert Size"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Whether reads in a pair point outward", "disabled": 0, "field_type": "checkbox", "id": "read_orientation_outward", "optional": 1, "short_hint": "Whether reads in a pair point outward", "ui_class": "parameter", "ui_name": "Reads Orientation Outward"}, {"advanced": 0, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Whether the reads are from a single genome or a metagenome.", "disabled": 0, "field_type": "checkbox", "id": "single_genome", "optional": 0, "short_hint": "Whether the reads are from a single genome or a metagenome.", "ui_class": "parameter", "ui_name": "Single Genome"}], "widgets": {"input": "null", "output": "no-display"}}, "tag": "dev", "version": "0.1.1"}, "exec": {"jobState": {"awe_job_id": "74aec407-e173-4179-adc7-f3ec7aeb4974", "canceled": 0, "cancelled": 0, "cell_id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "creation_time": 1485472364327, "exec_start_time": 1485472366780, "finish_time": 1485483975046, "finished": 1, "job_id": "588a826ce4b00a3e267bca37", "job_state": "completed", "result": [{"obj_ref": "16837/5/1,16837/10/1,16837/12/1"}], "run_id": null, "status": ["2017-01-27T02:26:15+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1485483983628, "launchState": {"cell_id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "event": "launched_job", "event_at": "2017-01-26T23:12:44.346697Z", "job_id": "588a826ce4b00a3e267bca37", "run_id": "c51cee72-7a28-4ac8-8501-403fb4b1892d"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-01-26T23:12:43.962Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-01-26T23:12:45.527Z"}, {"data": {"jobState": {"awe_job_id": "74aec407-e173-4179-adc7-f3ec7aeb4974", "awe_job_state": "in-progress", "cell_id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "creation_time": 1485472364327, "finished": 0, "job_id": "588a826ce4b00a3e267bca37", "job_state": "queued", "position": 3, "run_id": "c51cee72-7a28-4ac8-8501-403fb4b1892d", "status": ["2017-01-26T23:12:44+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T23:12:45.528Z"}, {"data": {"jobState": {"awe_job_id": "74aec407-e173-4179-adc7-f3ec7aeb4974", "awe_job_state": "in-progress", "cell_id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "creation_time": 1485472364327, "exec_start_time": 1485472366780, "finished": 0, "job_id": "588a826ce4b00a3e267bca37", "job_state": "in-progress", "run_id": "c51cee72-7a28-4ac8-8501-403fb4b1892d", "status": ["2017-01-26T23:12:46+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-26T23:12:52.049Z"}, {"data": {"jobState": {"awe_job_id": "74aec407-e173-4179-adc7-f3ec7aeb4974", "awe_job_state": "in-progress", "cell_id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "creation_time": 1485472364327, "exec_start_time": 1485472366780, "finished": 0, "job_id": "588a826ce4b00a3e267bca37", "job_state": "in-progress", "run_id": null, "status": ["2017-01-26T23:12:46+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T01:08:04.777Z"}, {"data": {"jobState": {"awe_job_id": "74aec407-e173-4179-adc7-f3ec7aeb4974", "canceled": 0, "cancelled": 0, "cell_id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "creation_time": 1485472364327, "exec_start_time": 1485472366780, "finish_time": 1485483975046, "finished": 1, "job_id": "588a826ce4b00a3e267bca37", "job_state": "completed", "result": [{"obj_ref": "16837/5/1,16837/10/1,16837/12/1"}], "run_id": null, "status": ["2017-01-27T02:26:15+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T02:26:23.628Z"}], "outputWidgetInfo": {"name": "no-display", "params": {"obj_ref": "16837/5/1,16837/10/1,16837/12/1", "report_name": null, "report_ref": null, "workspace_name": "jplfaria:1485469584244"}, "tag": "dev"}}, "fsm": {"currentState": {"mode": "success"}}, "newAppName": "Import Paired-End Reads from Web - v1.0.12", "outdated": true, "output": {"byJob": {"588a826ce4b00a3e267bca37": {"cell": {"created": false}, "createdAt": "Sun, 24 Sep 2017 00:51:39 GMT", "params": {"download_type": "FTP", "sequencing_tech": "Illumina", "urls_to_add": [{"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine1/Pyridine1_CAGATC_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "pyridine_sample_1.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine1/Pyridine1_CAGATC_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine2/Pyridine2_ACTTGA_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "pyridine_sample_2.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine2/Pyridine2_ACTTGA_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine3/Pyridine3_GATCAG_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "pyridine_sample_3.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine3/Pyridine3_GATCAG_L003_R2_001.fastq.gz", "single_genome": 1}]}}}}, "params": {"download_type": "FTP", "sequencing_tech": "Illumina", "urls_to_add": [{"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine1/Pyridine1_CAGATC_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "pyridine_sample_1.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine1/Pyridine1_CAGATC_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine2/Pyridine2_ACTTGA_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "pyridine_sample_2.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine2/Pyridine2_ACTTGA_L003_R2_001.fastq.gz", "single_genome": 1}, {"fwd_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine3/Pyridine3_GATCAG_L003_R1_001.fastq.gz", "insert_size_mean": null, "insert_size_std_dev": null, "name": "pyridine_sample_3.reads", "read_orientation_outward": 0, "rev_file_url": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine3/Pyridine3_GATCAG_L003_R2_001.fastq.gz", "single_genome": 1}]}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Thu, 26 Jan 2017 22:35:21 GMT", "id": "42d99445-2093-4d97-99d7-8c3f72ee42db", "info": {"label": "more...", "url": "/#appcatalog/app/kb_uploadmethods/load_paired_end_reads_from_URL/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Upload a Paired End Library into your Narrative", "title": "Load Paired-End Reads From Web"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/load_paired_end_reads_from_URL\",\n    {\n        \"download_type\": \"FTP\",\n        \"sequencing_tech\": \"Illumina\",\n        \"urls_to_add\": [{\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine1/Pyridine1_CAGATC_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine1/Pyridine1_CAGATC_L003_R2_001.fastq.gz\",\n        \"name\": \"pyridine_sample_1.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }, {\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine2/Pyridine2_ACTTGA_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine2/Pyridine2_ACTTGA_L003_R2_001.fastq.gz\",\n        \"name\": \"pyridine_sample_2.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }, {\n        \"fwd_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine3/Pyridine3_GATCAG_L003_R1_001.fastq.gz\",\n        \"rev_file_url\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/Sample_Pyridine3/Pyridine3_GATCAG_L003_R2_001.fastq.gz\",\n        \"name\": \"pyridine_sample_3.reads\",\n        \"single_genome\": 1,\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0\n    }]\n    },\n    tag=\"dev\",\n    version=\"aabbeb7e44f6988254a5477ec11e42584a5c39c1\",\n    cell_id=\"42d99445-2093-4d97-99d7-8c3f72ee42db\",\n    run_id=\"c51cee72-7a28-4ac8-8501-403fb4b1892d\"\n)"}, {"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "Load and Annotate Microbial Contigs (Assembly happ..."}, "cellState": {"selected": false, "showTitle": false}}}, "source": "### Load and Annotate Microbial Contigs (Assembly happened in Production)"}, {"cell_type": "code", "execution_count": 5, "metadata": {"kbase": {"attributes": {"created": "Wed, 20 Sep 2017 04:38:54 GMT", "icon": "code", "id": "b582a9ed-3318-4ff9-8715-88cc1a8fa843", "lastLoaded": "Wed, 20 Sep 2017 04:38:54 GMT", "status": "new", "subtitle": "", "title": "Import Job Cell"}, "codeCell": {"jobInfo": {"jobId": "588a7f7be4b00a3e267bca33", "state": {"awe_job_id": "3b392f92-90c6-47f0-bda3-18db3b4de168", "canceled": 0, "cancelled": 0, "cell_id": null, "creation_time": 1485471611653, "exec_start_time": 1485471616849, "finish_time": 1485471659790, "finished": 1, "job_id": "588a7f7be4b00a3e267bca33", "job_state": "completed", "result": ["16837/3/1"], "run_id": null, "status": ["2017-01-26T23:00:59+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "userSettings": {"showCodeInputArea": false}}, "type": "code"}}, "outputs": [{"data": {"application/javascript": "\n        element.html(\"<div id='kb-job-588a7f7be4b00a3e267bca33-65e25d98-ec51-4718-b200-e82a18925681' class='kb-vis-area'></div>\");\n\n        require(['jquery', 'kbaseNarrativeJobStatus'], function($, KBaseNarrativeJobStatus) {\n            var w = new KBaseNarrativeJobStatus($('#kb-job-588a7f7be4b00a3e267bca33-65e25d98-ec51-4718-b200-e82a18925681'), {'jobId': '588a7f7be4b00a3e267bca33', 'state': {\"status\": [\"2017-01-26T23:00:11+0000\", \"created\", null, null, null, null, null], \"cell_id\": null, \"job_id\": \"588a7f7be4b00a3e267bca33\", \"run_id\": null, \"job_state\": \"queued\", \"creation_time\": 1485471611653, \"ujs_url\": \"https://ci.kbase.us/services/userandjobstate/\", \"finished\": 0, \"position\": 1, \"awe_job_state\": \"queued\", \"awe_job_id\": \"3b392f92-90c6-47f0-bda3-18db3b4de168\"}, 'info': {\"version\": \"0.0.5\", \"app_id\": \"AssemblyUtil/import_assembly_fasta_file\", \"name\": \"UPLOAD FROM FASTA FILE\"}, 'outputWidgetInfo': null});\n        });\n        ", "text/plain": "KBase Narrative Job - 588a7f7be4b00a3e267bca33"}, "execution_count": 5, "metadata": {}, "output_type": "execute_result"}], "source": "from biokbase.narrative.jobs.jobmanager import JobManager\nJobManager().get_job('588a7f7be4b00a3e267bca33')"}, {"cell_type": "code", "execution_count": 4, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "9413cb5a4c229cb4cee44dd910d70b026ec0dced", "id": "RAST_SDK/annotate_contigset", "spec": {"behavior": {"kb_service_input_mapping": [{"input_parameter": "input_contigset", "target_property": "input_contigset"}, {"input_parameter": "scientific_name", "target_property": "scientific_name"}, {"input_parameter": "domain", "target_property": "domain"}, {"input_parameter": "genetic_code", "target_property": "genetic_code"}, {"input_parameter": "call_features_rRNA_SEED", "target_property": "call_features_rRNA_SEED"}, {"input_parameter": "call_features_tRNA_trnascan", "target_property": "call_features_tRNA_trnascan"}, {"input_parameter": "call_selenoproteins", "target_property": "call_selenoproteins"}, {"input_parameter": "call_pyrrolysoproteins", "target_property": "call_pyrrolysoproteins"}, {"input_parameter": "call_features_repeat_region_SEED", "target_property": "call_features_repeat_region_SEED"}, {"input_parameter": "call_features_insertion_sequences", "target_property": "call_features_insertion_sequences"}, {"input_parameter": "call_features_strep_suis_repeat", "target_property": "call_features_strep_suis_repeat"}, {"input_parameter": "call_features_strep_pneumo_repeat", "target_property": "call_features_strep_pneumo_repeat"}, {"input_parameter": "call_features_crispr", "target_property": "call_features_crispr"}, {"input_parameter": "call_features_CDS_glimmer3", "target_property": "call_features_CDS_glimmer3"}, {"input_parameter": "call_features_CDS_prodigal", "target_property": "call_features_CDS_prodigal"}, {"input_parameter": "annotate_proteins_kmer_v2", "target_property": "annotate_proteins_kmer_v2"}, {"input_parameter": "kmer_v1_parameters", "target_property": "kmer_v1_parameters"}, {"input_parameter": "annotate_proteins_similarity", "target_property": "annotate_proteins_similarity"}, {"input_parameter": "resolve_overlapping_features", "target_property": "resolve_overlapping_features"}, {"input_parameter": "find_close_neighbors", "target_property": "find_close_neighbors"}, {"input_parameter": "call_features_prophage_phispy", "target_property": "call_features_prophage_phispy"}, {"generated_value": {"prefix": "genome_"}, "input_parameter": "output_genome", "target_property": "output_genome"}, {"narrative_system_variable": "workspace", "target_property": "workspace"}], "kb_service_method": "annotate_genome", "kb_service_name": "RAST_SDK", "kb_service_output_mapping": [{"service_method_output_path": ["0", "report_name"], "target_property": "report_name"}, {"service_method_output_path": ["0", "report_ref"], "target_property": "report_ref"}, {"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "output_genome", "target_property": "id"}, {"narrative_system_variable": "workspace", "target_property": "ws"}], "kb_service_url": "", "kb_service_version": "9413cb5a4c229cb4cee44dd910d70b026ec0dced"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["chenry", "olson"], "categories": ["active", "annotation"], "git_commit_hash": "9413cb5a4c229cb4cee44dd910d70b026ec0dced", "id": "RAST_SDK/annotate_contigset", "input_types": ["KBaseGenomeAnnotations.Assembly", "KBaseGenomes.ContigSet"], "module_name": "RAST_SDK", "name": "Annotate Microbial Contigs", "namespace": "RAST_SDK", "output_types": ["KBaseGenomes.Genome"], "subtitle": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).", "tooltip": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).", "ver": "0.0.4"}, "job_id_output_field": "docker", "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "An Assembly or ContigSet object to annotate", "disabled": 0, "field_type": "text", "id": "input_contigset", "optional": 0, "short_hint": "An Assembly or ContigSet object to annotate", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.ContigSet", "KBaseGenomeAnnotations.Assembly"]}, "ui_class": "input", "ui_name": "Assembled Contigs"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "The scientific name to assign to the genome", "disabled": 0, "field_type": "text", "id": "scientific_name", "optional": 0, "short_hint": "The scientific name to assign to the genome", "ui_class": "parameter", "ui_name": "Scientific Name"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["B"], "description": "The domain of life of the organism being annotated", "disabled": 0, "dropdown_options": {"options": [{"display": "B (Bacteria)", "index": 0, "value": "B"}, {"display": "A (Archaea)", "index": 1, "value": "A"}]}, "field_type": "dropdown", "id": "domain", "optional": 0, "short_hint": "The domain of life of the organism being annotated", "ui_class": "parameter", "ui_name": "Domain"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["11"], "description": "The genetic code used in translating to protein sequences", "disabled": 0, "dropdown_options": {"options": [{"display": "11 (Archaea, most Bacteria, most Virii, and some Mitochondria)", "index": 0, "value": "11"}, {"display": "4 (Mycoplasmaea, Spiroplasmaea, Ureoplasmaea, and Fungal Mitochondria)", "index": 1, "value": "4"}]}, "field_type": "dropdown", "id": "genetic_code", "optional": 0, "short_hint": "The genetic code used in translating to protein sequences", "ui_class": "parameter", "ui_name": "Genetic Code"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "output_genome", "optional": 0, "short_hint": "Name to assign the output genome", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "ui_class": "output", "ui_name": "Output Genome Name"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call rRNAs", "disabled": 0, "field_type": "checkbox", "id": "call_features_rRNA_SEED", "optional": 0, "short_hint": "Call rRNAs", "ui_class": "parameter", "ui_name": "Call rRNAs"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call tRNAs with tRNAscan", "disabled": 0, "field_type": "checkbox", "id": "call_features_tRNA_trnascan", "optional": 0, "short_hint": "Call tRNAs with tRNAscan", "ui_class": "parameter", "ui_name": "Call tRNAs with tRNAscan"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call selenoproteins", "disabled": 0, "field_type": "checkbox", "id": "call_selenoproteins", "optional": 0, "short_hint": "Call selenoproteins", "ui_class": "parameter", "ui_name": "Call selenoproteins"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call pyrrolysoproteins", "disabled": 0, "field_type": "checkbox", "id": "call_pyrrolysoproteins", "optional": 0, "short_hint": "Call pyrrolysoproteins", "ui_class": "parameter", "ui_name": "Call pyrrolysoproteins"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call pyrrolysoproteins", "disabled": 0, "field_type": "checkbox", "id": "call_features_repeat_region_SEED", "optional": 0, "short_hint": "Call pyrrolysoproteins", "ui_class": "parameter", "ui_name": "Call large repeat regions"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Call insertion sequences", "disabled": 0, "field_type": "checkbox", "id": "call_features_insertion_sequences", "optional": 0, "short_hint": "Call insertion sequences", "ui_class": "parameter", "ui_name": "Call insertion sequences"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Find Streptococcus repeat regions", "disabled": 0, "field_type": "checkbox", "id": "call_features_strep_suis_repeat", "optional": 0, "short_hint": "Find Streptococcus repeat regions", "ui_class": "parameter", "ui_name": "Find Streptococcus repeat regions"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call features strep pneumo repeat", "disabled": 0, "field_type": "checkbox", "id": "call_features_strep_pneumo_repeat", "optional": 0, "short_hint": "Call features strep pneumo repeat", "ui_class": "parameter", "ui_name": "Call features strep pneumo repeat"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call CRISPRs", "disabled": 0, "field_type": "checkbox", "id": "call_features_crispr", "optional": 0, "short_hint": "Call CRISPRs", "ui_class": "parameter", "ui_name": "Call CRISPRs"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call protein-encoding genes with Glimmer3", "disabled": 0, "field_type": "checkbox", "id": "call_features_CDS_glimmer3", "optional": 0, "short_hint": "Call protein-encoding genes with Glimmer3", "ui_class": "parameter", "ui_name": "Call protein-encoding genes with Glimmer3"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Call protein-encoding genes with Prodigal", "disabled": 0, "field_type": "checkbox", "id": "call_features_CDS_prodigal", "optional": 0, "short_hint": "Call protein-encoding genes with Prodigal", "ui_class": "parameter", "ui_name": "Call protein-encoding genes with Prodigal"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Annotate protein-encoding genes with k-mers v2", "disabled": 0, "field_type": "checkbox", "id": "annotate_proteins_kmer_v2", "optional": 0, "short_hint": "Annotate protein-encoding genes with k-mers v2", "ui_class": "parameter", "ui_name": "Annotate protein-encoding genes with k-mers v2"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Annotate remaining hypothetical proteins with k-mers", "disabled": 0, "field_type": "checkbox", "id": "kmer_v1_parameters", "optional": 0, "short_hint": "Annotate remaining hypothetical proteins with k-mers", "ui_class": "parameter", "ui_name": "Annotate remaining hypothetical proteins with k-mers"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Annotate remaining hypothetical proteins by searching against close relatives", "disabled": 0, "field_type": "checkbox", "id": "annotate_proteins_similarity", "optional": 0, "short_hint": "Annotate remaining hypothetical proteins by searching against close relatives", "ui_class": "parameter", "ui_name": "Annotate remaining hypothetical proteins by searching against close relatives"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Perform basic gene overlap removal", "disabled": 0, "field_type": "checkbox", "id": "resolve_overlapping_features", "optional": 0, "short_hint": "Perform basic gene overlap removal", "ui_class": "parameter", "ui_name": "Perform basic gene overlap removal"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Find close neighbors", "disabled": 0, "field_type": "checkbox", "id": "find_close_neighbors", "optional": 0, "short_hint": "Find close neighbors", "ui_class": "parameter", "ui_name": "Find close neighbors"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Find prophage elements with phispy", "disabled": 0, "field_type": "checkbox", "id": "call_features_prophage_phispy", "optional": 0, "short_hint": "Find prophage elements with phispy", "ui_class": "parameter", "ui_name": "Find prophage elements with phispy"}], "widgets": {"input": "null", "output": "kbaseGenomeView"}}, "tag": "dev", "version": "0.0.4"}, "exec": {"jobState": {"awe_job_id": "74324d9e-cbb8-41be-b23e-77d5e92018f4", "canceled": 1, "cell_id": "6ecf9b56-308e-426d-b1b9-e6941044ed22", "creation_time": 1485540083264, "finish_time": 1485541290861, "finished": 1, "job_id": "588b8af3e4b00a3e267bca94", "job_state": "canceled", "run_id": "430130a2-398c-433e-b8f6-dc98ea1a8f2e", "status": ["2017-01-27T18:21:30+0000", "canceled", "canceled by user", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1485541806086, "launchState": {"cell_id": "6ecf9b56-308e-426d-b1b9-e6941044ed22", "event": "launched_job", "event_at": "2017-01-27T18:01:23.273422Z", "job_id": "588b8af3e4b00a3e267bca94", "run_id": "430130a2-398c-433e-b8f6-dc98ea1a8f2e"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-01-27T18:01:18.996Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-01-27T18:01:23.303Z"}, {"data": {"jobState": {"awe_job_id": "74324d9e-cbb8-41be-b23e-77d5e92018f4", "awe_job_state": "queued", "cell_id": "6ecf9b56-308e-426d-b1b9-e6941044ed22", "creation_time": 1485540083264, "finished": 0, "job_id": "588b8af3e4b00a3e267bca94", "job_state": "queued", "position": 2, "run_id": "430130a2-398c-433e-b8f6-dc98ea1a8f2e", "status": ["2017-01-27T18:01:23+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T18:01:23.808Z"}, {"data": {"jobState": {"awe_job_id": "74324d9e-cbb8-41be-b23e-77d5e92018f4", "canceled": 1, "cell_id": "6ecf9b56-308e-426d-b1b9-e6941044ed22", "creation_time": 1485540083264, "finish_time": 1485541290861, "finished": 1, "job_id": "588b8af3e4b00a3e267bca94", "job_state": "canceled", "run_id": "430130a2-398c-433e-b8f6-dc98ea1a8f2e", "status": ["2017-01-27T18:21:30+0000", "canceled", "canceled by user", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T18:30:06.086Z"}]}, "fsm": {"currentState": {"mode": "canceled"}}, "newAppName": "Annotate Microbial Assembly", "outdated": true, "output": {"byJob": {}}, "params": {"annotate_proteins_kmer_v2": 1, "annotate_proteins_similarity": 1, "call_features_CDS_glimmer3": 1, "call_features_CDS_prodigal": 1, "call_features_crispr": 1, "call_features_insertion_sequences": 0, "call_features_prophage_phispy": 0, "call_features_rRNA_SEED": 1, "call_features_repeat_region_SEED": 1, "call_features_strep_pneumo_repeat": 1, "call_features_strep_suis_repeat": 1, "call_features_tRNA_trnascan": 1, "call_pyrrolysoproteins": 1, "call_selenoproteins": 1, "domain": "B", "find_close_neighbors": 1, "genetic_code": "11", "input_contigset": "micrococcus_leteus.contigs", "kmer_v1_parameters": 1, "output_genome": "Mlut", "resolve_overlapping_features": 1, "scientific_name": "Micrococcus luteus"}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Fri, 27 Jan 2017 17:59:59 GMT", "id": "6ecf9b56-308e-426d-b1b9-e6941044ed22", "info": {"label": "more...", "url": "/#appcatalog/app/RAST_SDK/annotate_contigset/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Annotate bacterial or archaeal contigs using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).", "title": "Annotate Microbial Contigs"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/annotate_contigset\",\n    {\n        \"input_contigset\": \"micrococcus_leteus.contigs\",\n        \"scientific_name\": \"Micrococcus luteus\",\n        \"domain\": \"B\",\n        \"genetic_code\": \"11\",\n        \"output_genome\": \"Mlut\",\n        \"call_features_rRNA_SEED\": 1,\n        \"call_features_tRNA_trnascan\": 1,\n        \"call_selenoproteins\": 1,\n        \"call_pyrrolysoproteins\": 1,\n        \"call_features_repeat_region_SEED\": 1,\n        \"call_features_insertion_sequences\": 0,\n        \"call_features_strep_suis_repeat\": 1,\n        \"call_features_strep_pneumo_repeat\": 1,\n        \"call_features_crispr\": 1,\n        \"call_features_CDS_glimmer3\": 1,\n        \"call_features_CDS_prodigal\": 1,\n        \"annotate_proteins_kmer_v2\": 1,\n        \"kmer_v1_parameters\": 1,\n        \"annotate_proteins_similarity\": 1,\n        \"resolve_overlapping_features\": 1,\n        \"find_close_neighbors\": 1,\n        \"call_features_prophage_phispy\": 0\n    },\n    tag=\"dev\",\n    version=\"9413cb5a4c229cb4cee44dd910d70b026ec0dced\",\n    cell_id=\"6ecf9b56-308e-426d-b1b9-e6941044ed22\",\n    run_id=\"430130a2-398c-433e-b8f6-dc98ea1a8f2e\"\n)"}, {"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "Annotated genome from original analysis Narrative"}, "cellState": {"selected": false, "showTitle": false}}}, "source": "### Annotated genome from original analysis Narrative\u00b6 (since Annotate Microbial Contigs above is broken)\n"}, {"cell_type": "code", "execution_count": 5, "metadata": {"kbase": {"attributes": {"created": "Fri, 27 Jan 2017 03:02:35 GMT", "icon": "database", "id": "5465bdb5-06af-437d-bff4-cfc7b0e972d7", "lastLoaded": "Thu, 18 Oct 2018 00:10:42 GMT", "status": "new", "subtitle": "v1 - KBaseGenomes.Genome-12.3", "title": "micrococcus_luteus.genome"}, "dataCell": {"objectInfo": {"chsum": "be89ea59d4c1542c70a08ef204d3b79a", "id": 9, "meta": {"Close genomes": "30", "Domain": "B", "GC content": "0.649", "Genetic code": "11", "MD5": "036e6e6611a04461634c8798690b5906", "Name": "Micrococcus leteus", "Number contigs": "145", "Number features": "4826", "Source": "KBase", "Source ID": "micrococcus_leteus.genome"}, "name": "micrococcus_luteus.genome", "save_date": "2017-01-27T01:31:53+0000", "saved_by": "jplfaria", "size": 3696579, "type": "KBaseGenomes.Genome-12.3", "version": 1, "ws_id": 16837, "ws_name": "jplfaria:1485469584244"}, "user-settings": {"showCodeInputArea": false}}, "type": "data"}}, "outputs": [{"data": {"application/javascript": "\n        element.html(\"<div id='kb-vis-620d63d4-a8af-488f-90ac-6addc4d492bf' class='kb-vis-area'></div>\");\n\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-620d63d4-a8af-488f-90ac-6addc4d492bf'), {\n                \"data\": {\"output\": {\"ws\": \"jplfaria:1485469584244\", \"id\": \"micrococcus_luteus.genome\"}, \"type_spec\": {\"import_method_ids\": [\"GenomeFileUtil/import_genome_gbk_file\", \"GenomeFileUtil/import_genome_gbk_ftp\"], \"subtitle\": \"Genome object\", \"name\": \"Genome\", \"export_functions\": {\"GENBANK\": \"GenomeFileUtil/export_genome_as_genbank\"}, \"view_method_ids\": [\"NarrativeViewers/view_genome\"], \"description\": \"<p>This type describes genome.</p>\\n\", \"type_name\": \"KBaseGenomes.Genome\", \"tooltip\": \"Genome object\", \"landing_page_url_prefix\": \"genomes\", \"icon\": {\"url\": \"img?type_name=KBaseGenomes.Genome&image_name=genome.png\"}}, \"info_tuple\": [9, \"micrococcus_luteus.genome\", \"KBaseGenomes.Genome-12.3\", \"2017-01-27T01:31:53+0000\", 1, \"jplfaria\", 16837, \"jplfaria:1485469584244\", \"be89ea59d4c1542c70a08ef204d3b79a\", 3696579, {\"Domain\": \"B\", \"Number features\": \"4826\", \"Name\": \"Micrococcus leteus\", \"GC content\": \"0.649\", \"Number contigs\": \"145\", \"Source\": \"KBase\", \"Genetic code\": \"11\", \"Source ID\": \"micrococcus_leteus.genome\", \"Close genomes\": \"30\", \"MD5\": \"036e6e6611a04461634c8798690b5906\"}], \"app_spec\": {\"info\": {\"ver\": \"0.0.10\", \"name\": \"View Genome\", \"subtitle\": \"View and explore a Genome object in your workspace. [5]\", \"output_types\": [], \"app_type\": \"viewer\", \"namespace\": \"NarrativeViewers\", \"tooltip\": \"View and explore a Genome object in your workspace. [5]\", \"git_commit_hash\": \"5ccf202a4c6981f248bb2934fe3a7bb623ca2b19\", \"input_types\": [\"KBaseGenomes.Genome\"], \"authors\": [], \"module_name\": \"NarrativeViewers\", \"id\": \"NarrativeViewers/view_genome\", \"categories\": [\"viewers\"]}, \"widgets\": {\"input\": \"null\", \"output\": \"kbaseGenomeView\"}, \"fixed_parameters\": [], \"parameters\": [{\"field_type\": \"text\", \"ui_class\": \"input\", \"allow_multiple\": 0, \"description\": \"select the genome you want to view [5.1]\", \"text_options\": {\"is_output_name\": 0, \"placeholder\": \"\", \"regex_constraint\": [], \"valid_ws_types\": [\"KBaseGenomes.Genome\"]}, \"disabled\": 0, \"short_hint\": \"select the genome you want to view [5.1]\", \"default_values\": [\"\"], \"ui_name\": \"Genome\", \"optional\": 0, \"id\": \"param0\", \"advanced\": 0}], \"behavior\": {\"output_mapping\": [{\"target_property\": \"id\", \"input_parameter\": \"param0\"}, {\"target_property\": \"ws\", \"narrative_system_variable\": \"workspace\"}]}}},\n                \"type\":\"viewer\",\n                \"widget\":\"kbaseNarrativeDataCell\",\n                \"cellId\":\"5465bdb5-06af-437d-bff4-cfc7b0e972d7\",\n                \"title\":\"micrococcus_luteus.genome\",\n                \"time\":1485486155824\n            });\n        });\n        ", "text/plain": "<IPython.core.display.Javascript object>"}, "execution_count": 5, "metadata": {}, "output_type": "execute_result"}], "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"16837/9/1\",\n    cell_id=\"5465bdb5-06af-437d-bff4-cfc7b0e972d7\",\n    title=\"micrococcus_luteus.genome\",\n    tag=\"dev\"\n)"}, {"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "Create RNASeqSampleSet"}, "cellState": {"selected": false, "showTitle": false}}}, "source": "### Create RNASeqSampleSet"}, {"cell_type": "code", "execution_count": 6, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "5a54b8d1aeb6598b2aacccac7c053d2b6a015538", "id": "KBaseRNASeq/describe_rnaseq_experiment", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "ws_id"}, {"input_parameter": "sampleset_id", "target_property": "sampleset_id"}, {"input_parameter": "sampleset_desc", "target_property": "sampleset_desc"}, {"input_parameter": "platform", "target_property": "platform"}, {"input_parameter": "Library_type", "target_property": "Library_type"}, {"input_parameter": "sample_n_conditions", "target_property": "sample_n_conditions"}, {"input_parameter": "domain", "target_property": "domain"}, {"input_parameter": "source", "target_property": "source"}, {"input_parameter": "publication_id", "target_property": "publication_id"}], "kb_service_method": "CreateRNASeqSampleSet", "kb_service_name": "KBaseRNASeq", "kb_service_output_mapping": [{"input_parameter": "sampleset_id", "target_property": "output"}, {"narrative_system_variable": "workspace", "target_property": "workspace"}, {"service_method_output_path": ["0"], "target_property": "CreateRNASeqSampleSet"}], "kb_service_url": "", "kb_service_version": "5a54b8d1aeb6598b2aacccac7c053d2b6a015538"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": [], "categories": ["active", "expression"], "git_commit_hash": "5a54b8d1aeb6598b2aacccac7c053d2b6a015538", "icon": {"url": "img?method_id=KBaseRNASeq/describe_rnaseq_experiment&image_name=rnaseq-yellow.png&tag=dev"}, "id": "KBaseRNASeq/describe_rnaseq_experiment", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary"], "module_name": "KBaseRNASeq", "name": "Create RNA-seq Sample Set", "namespace": "KBaseRNASeq", "output_types": ["KBaseRNASeq.RNASeqSampleSet"], "subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "tooltip": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "ver": "0.0.5"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 0, "allow_multiple": 1, "description": "", "id": "sample_n_conditions", "optional": 0, "parameter_ids": ["sample_id", "condition"], "short_hint": "Please provide sample and condition pair", "ui_name": "RNA-seq sample and condition", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "sampleset_id", "optional": 0, "short_hint": "Name of the output RNA-seq sample set object.", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet"]}, "ui_class": "output", "ui_name": "RNA-seq Sample Set"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "textarea", "id": "sampleset_desc", "optional": 1, "short_hint": "The detailed description of the RNA-seq samples selected", "textarea_options": {"n_rows": 4, "placeholder": ""}, "ui_class": "parameter", "ui_name": "Sample Set Description"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "platform", "optional": 1, "short_hint": "The platform used for sequencing (e.g Illumina)", "ui_class": "parameter", "ui_name": "Platform"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "dropdown_options": {"options": [{"display": "SingleEnd", "index": 0, "value": "SingleEnd"}, {"display": "PairedEnd", "index": 1, "value": "PairedEnd"}]}, "field_type": "dropdown", "id": "Library_type", "optional": 0, "short_hint": "The type of sequencing reads - single-end vs. paired-end", "ui_class": "parameter", "ui_name": "Library Type"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "sample_id", "optional": 0, "short_hint": "Select the single-end or paired-end reads files based on the type of sequencing reads.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary", "KBaseFile.SingleEndLibrary", "KBaseFile.PairedEndLibrary"]}, "ui_class": "input", "ui_name": "Reads (Single-end/Paired-end)"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "condition", "optional": 0, "short_hint": "Short label for each sample in the RNA-seq experiment. The treatment labels must be added in the same order as the reads. All replicates for the same treatment must have same label.", "ui_class": "parameter", "ui_name": "Treatment Labels"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "dropdown_options": {"options": [{"display": "Eukaryotes", "index": 0, "value": "Eukaryotes"}, {"display": "Prokaryotes", "index": 1, "value": "Prokaryotes"}]}, "field_type": "dropdown", "id": "domain", "optional": 1, "short_hint": "The domain of the genome - prokaryotes vs. eukaryotes", "ui_class": "parameter", "ui_name": "Domain"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "source", "optional": 1, "short_hint": "The source of the data used for RNA-seq experiment (e.g NCBI)", "ui_class": "parameter", "ui_name": "Source"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "publication_id", "optional": 1, "short_hint": "The publication details of the data used for RNA-seq experiment", "ui_class": "parameter", "ui_name": "Publication Details"}], "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}, "tag": "dev", "version": "0.0.5"}, "exec": {"jobState": {"awe_job_id": "e370dac6-d879-48f4-b169-a52e9f01343c", "canceled": 0, "cell_id": "9eaa5ea0-05e7-41f7-8283-cc22660683a4", "creation_time": 1485487907182, "exec_start_time": 1485487910497, "finish_time": 1485487925244, "finished": 1, "job_id": "588abf23e4b00a3e267bca65", "job_state": "completed", "result": [{"Library_type": "PairedEnd", "condition": ["pyridine", "pyridine", "pyridine", "acetate", "acetate", "acetate", "glucose", "glucose", "glucose"], "domain": "Prokaryotes", "num_samples": 9, "platform": "Illumina", "publication_id": null, "sample_ids": ["16837/5/1", "16837/10/1", "16837/12/1", "16837/4/1", "16837/7/1", "16837/8/1", "16837/6/1", "16837/11/1", "16837/13/1"], "sample_n_conditions": [{"condition": "pyridine", "sample_id": "16837/5/1"}, {"condition": "pyridine", "sample_id": "16837/10/1"}, {"condition": "pyridine", "sample_id": "16837/12/1"}, {"condition": "acetate", "sample_id": "16837/4/1"}, {"condition": "acetate", "sample_id": "16837/7/1"}, {"condition": "acetate", "sample_id": "16837/8/1"}, {"condition": "glucose", "sample_id": "16837/6/1"}, {"condition": "glucose", "sample_id": "16837/11/1"}, {"condition": "glucose", "sample_id": "16837/13/1"}], "sampleset_desc": "Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition", "sampleset_id": "micrococcus.RNASeqData", "source": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/"}], "run_id": null, "status": ["2017-01-27T03:32:05+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1485488090446, "launchState": {"cell_id": "9eaa5ea0-05e7-41f7-8283-cc22660683a4", "event": "launched_job", "event_at": "2017-01-27T03:31:47.192389Z", "job_id": "588abf23e4b00a3e267bca65", "run_id": "835a93a4-02f6-4b70-8339-b1fc0e6e84cb"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-01-27T03:31:46.032Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-01-27T03:31:47.237Z"}, {"data": {"jobState": {"awe_job_id": "e370dac6-d879-48f4-b169-a52e9f01343c", "awe_job_state": "in-progress", "cell_id": "9eaa5ea0-05e7-41f7-8283-cc22660683a4", "creation_time": 1485487907182, "finished": 0, "job_id": "588abf23e4b00a3e267bca65", "job_state": "queued", "position": 1, "run_id": "835a93a4-02f6-4b70-8339-b1fc0e6e84cb", "status": ["2017-01-27T03:31:47+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T03:31:47.657Z"}, {"data": {"jobState": {"awe_job_id": "e370dac6-d879-48f4-b169-a52e9f01343c", "canceled": 0, "cell_id": "9eaa5ea0-05e7-41f7-8283-cc22660683a4", "creation_time": 1485487907182, "exec_start_time": 1485487910497, "finish_time": 1485487925244, "finished": 1, "job_id": "588abf23e4b00a3e267bca65", "job_state": "completed", "result": [{"Library_type": "PairedEnd", "condition": ["pyridine", "pyridine", "pyridine", "acetate", "acetate", "acetate", "glucose", "glucose", "glucose"], "domain": "Prokaryotes", "num_samples": 9, "platform": "Illumina", "publication_id": null, "sample_ids": ["16837/5/1", "16837/10/1", "16837/12/1", "16837/4/1", "16837/7/1", "16837/8/1", "16837/6/1", "16837/11/1", "16837/13/1"], "sample_n_conditions": [{"condition": "pyridine", "sample_id": "16837/5/1"}, {"condition": "pyridine", "sample_id": "16837/10/1"}, {"condition": "pyridine", "sample_id": "16837/12/1"}, {"condition": "acetate", "sample_id": "16837/4/1"}, {"condition": "acetate", "sample_id": "16837/7/1"}, {"condition": "acetate", "sample_id": "16837/8/1"}, {"condition": "glucose", "sample_id": "16837/6/1"}, {"condition": "glucose", "sample_id": "16837/11/1"}, {"condition": "glucose", "sample_id": "16837/13/1"}], "sampleset_desc": "Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition", "sampleset_id": "micrococcus.RNASeqData", "source": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/"}], "run_id": null, "status": ["2017-01-27T03:32:05+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T03:34:50.446Z"}], "outputWidgetInfo": {"name": "kbaseRNASeqAnalysisNew", "params": {"CreateRNASeqSampleSet": {"Library_type": "PairedEnd", "condition": ["pyridine", "pyridine", "pyridine", "acetate", "acetate", "acetate", "glucose", "glucose", "glucose"], "domain": "Prokaryotes", "num_samples": 9, "platform": "Illumina", "publication_id": null, "sample_ids": ["16837/5/1", "16837/10/1", "16837/12/1", "16837/4/1", "16837/7/1", "16837/8/1", "16837/6/1", "16837/11/1", "16837/13/1"], "sample_n_conditions": [{"condition": "pyridine", "sample_id": "16837/5/1"}, {"condition": "pyridine", "sample_id": "16837/10/1"}, {"condition": "pyridine", "sample_id": "16837/12/1"}, {"condition": "acetate", "sample_id": "16837/4/1"}, {"condition": "acetate", "sample_id": "16837/7/1"}, {"condition": "acetate", "sample_id": "16837/8/1"}, {"condition": "glucose", "sample_id": "16837/6/1"}, {"condition": "glucose", "sample_id": "16837/11/1"}, {"condition": "glucose", "sample_id": "16837/13/1"}], "sampleset_desc": "Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition", "sampleset_id": "micrococcus.RNASeqData", "source": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/"}, "output": "micrococcus.RNASeqData", "workspace": "jplfaria:1485469584244"}, "tag": "dev"}}, "fsm": {"currentState": {"mode": "success"}}, "newAppName": "Create RNA-seq Sample Set", "outdated": true, "output": {"byJob": {"588abf23e4b00a3e267bca65": {"cell": {"created": true, "id": "d6e33d1a-7681-4309-a982-8db9063cdc4c"}, "createdAt": "Fri, 27 Jan 2017 03:34:50 GMT", "params": {"Library_type": "PairedEnd", "domain": "Prokaryotes", "platform": "Illumina", "publication_id": "", "sample_n_conditions": [{"condition": "pyridine", "sample_id": "16837/5/1"}, {"condition": "pyridine", "sample_id": "16837/10/1"}, {"condition": "pyridine", "sample_id": "16837/12/1"}, {"condition": "acetate", "sample_id": "16837/4/1"}, {"condition": "acetate", "sample_id": "16837/7/1"}, {"condition": "acetate", "sample_id": "16837/8/1"}, {"condition": "glucose", "sample_id": "16837/6/1"}, {"condition": "glucose", "sample_id": "16837/11/1"}, {"condition": "glucose", "sample_id": "16837/13/1"}], "sampleset_desc": "Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition", "sampleset_id": "micrococcus.RNASeqData", "source": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/"}}}}, "params": {"Library_type": "PairedEnd", "domain": "Prokaryotes", "platform": "Illumina", "publication_id": "", "sample_n_conditions": [{"condition": "pyridine", "sample_id": "16837/5/1"}, {"condition": "pyridine", "sample_id": "16837/10/1"}, {"condition": "pyridine", "sample_id": "16837/12/1"}, {"condition": "acetate", "sample_id": "16837/4/1"}, {"condition": "acetate", "sample_id": "16837/7/1"}, {"condition": "acetate", "sample_id": "16837/8/1"}, {"condition": "glucose", "sample_id": "16837/6/1"}, {"condition": "glucose", "sample_id": "16837/11/1"}, {"condition": "glucose", "sample_id": "16837/13/1"}], "sampleset_desc": "Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition", "sampleset_id": "micrococcus.RNASeqData", "source": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/"}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Fri, 27 Jan 2017 01:36:08 GMT", "id": "9eaa5ea0-05e7-41f7-8283-cc22660683a4", "info": {"label": "more...", "url": "/#appcatalog/app/KBaseRNASeq/describe_rnaseq_experiment/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "title": "Create RNA-seq Sample Set"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"KBaseRNASeq/describe_rnaseq_experiment\",\n    {\n        \"sampleset_id\": \"micrococcus.RNASeqData\",\n        \"sampleset_desc\": \"Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition\",\n        \"platform\": \"Illumina\",\n        \"Library_type\": \"PairedEnd\",\n        \"domain\": \"Prokaryotes\",\n        \"source\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/\",\n        \"publication_id\": \"\",\n        \"sample_n_conditions\": [{\n        \"sample_id\": \"16837/5/1\",\n        \"condition\": \"pyridine\"\n    }, {\n        \"sample_id\": \"16837/10/1\",\n        \"condition\": \"pyridine\"\n    }, {\n        \"sample_id\": \"16837/12/1\",\n        \"condition\": \"pyridine\"\n    }, {\n        \"sample_id\": \"16837/4/1\",\n        \"condition\": \"acetate\"\n    }, {\n        \"sample_id\": \"16837/7/1\",\n        \"condition\": \"acetate\"\n    }, {\n        \"sample_id\": \"16837/8/1\",\n        \"condition\": \"acetate\"\n    }, {\n        \"sample_id\": \"16837/6/1\",\n        \"condition\": \"glucose\"\n    }, {\n        \"sample_id\": \"16837/11/1\",\n        \"condition\": \"glucose\"\n    }, {\n        \"sample_id\": \"16837/13/1\",\n        \"condition\": \"glucose\"\n    }]\n    },\n    tag=\"dev\",\n    version=\"5a54b8d1aeb6598b2aacccac7c053d2b6a015538\",\n    cell_id=\"9eaa5ea0-05e7-41f7-8283-cc22660683a4\",\n    run_id=\"835a93a4-02f6-4b70-8339-b1fc0e6e84cb\"\n)"}, {"cell_type": "code", "execution_count": 1, "metadata": {"kbase": {"attributes": {"created": "Fri, 27 Jan 2017 03:34:50 GMT", "icon": "arrow-right", "id": "d6e33d1a-7681-4309-a982-8db9063cdc4c", "lastLoaded": "Thu, 18 Oct 2018 00:10:42 GMT", "status": "new", "title": "Output from Create RNA-seq Sample Set"}, "dataCell": {}, "outputCell": {"jobId": "588abf23e4b00a3e267bca65", "parentCellId": "9eaa5ea0-05e7-41f7-8283-cc22660683a4", "user-settings": {"showCodeInputArea": false}, "widget": {"name": "kbaseRNASeqAnalysisNew", "params": {"CreateRNASeqSampleSet": {"Library_type": "PairedEnd", "condition": ["pyridine", "pyridine", "pyridine", "acetate", "acetate", "acetate", "glucose", "glucose", "glucose"], "domain": "Prokaryotes", "num_samples": 9, "platform": "Illumina", "publication_id": null, "sample_ids": ["16837/5/1", "16837/10/1", "16837/12/1", "16837/4/1", "16837/7/1", "16837/8/1", "16837/6/1", "16837/11/1", "16837/13/1"], "sample_n_conditions": [{"condition": "pyridine", "sample_id": "16837/5/1"}, {"condition": "pyridine", "sample_id": "16837/10/1"}, {"condition": "pyridine", "sample_id": "16837/12/1"}, {"condition": "acetate", "sample_id": "16837/4/1"}, {"condition": "acetate", "sample_id": "16837/7/1"}, {"condition": "acetate", "sample_id": "16837/8/1"}, {"condition": "glucose", "sample_id": "16837/6/1"}, {"condition": "glucose", "sample_id": "16837/11/1"}, {"condition": "glucose", "sample_id": "16837/13/1"}], "sampleset_desc": "Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition", "sampleset_id": "micrococcus.RNASeqData", "source": "ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/"}, "output": "micrococcus.RNASeqData", "workspace": "jplfaria:1485469584244"}, "tag": "dev"}}, "type": "output"}}, "outputs": [{"data": {"application/javascript": "\n        element.html(\"<div id='kb-vis-023743bf-3f38-42f8-b129-0ab761d9d444' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-023743bf-3f38-42f8-b129-0ab761d9d444'), {\n                \"data\": {\"output\": \"micrococcus.RNASeqData\", \"workspace\": \"jplfaria:1485469584244\", \"CreateRNASeqSampleSet\": {\"Library_type\": \"PairedEnd\", \"domain\": \"Prokaryotes\", \"sampleset_id\": \"micrococcus.RNASeqData\", \"sample_n_conditions\": [{\"condition\": \"pyridine\", \"sample_id\": \"16837/5/1\"}, {\"condition\": \"pyridine\", \"sample_id\": \"16837/10/1\"}, {\"condition\": \"pyridine\", \"sample_id\": \"16837/12/1\"}, {\"condition\": \"acetate\", \"sample_id\": \"16837/4/1\"}, {\"condition\": \"acetate\", \"sample_id\": \"16837/7/1\"}, {\"condition\": \"acetate\", \"sample_id\": \"16837/8/1\"}, {\"condition\": \"glucose\", \"sample_id\": \"16837/6/1\"}, {\"condition\": \"glucose\", \"sample_id\": \"16837/11/1\"}, {\"condition\": \"glucose\", \"sample_id\": \"16837/13/1\"}], \"condition\": [\"pyridine\", \"pyridine\", \"pyridine\", \"acetate\", \"acetate\", \"acetate\", \"glucose\", \"glucose\", \"glucose\"], \"sample_ids\": [\"16837/5/1\", \"16837/10/1\", \"16837/12/1\", \"16837/4/1\", \"16837/7/1\", \"16837/8/1\", \"16837/6/1\", \"16837/11/1\", \"16837/13/1\"], \"platform\": \"Illumina\", \"publication_id\": null, \"source\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/\", \"num_samples\": 9, \"sampleset_desc\": \"Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition\"}},\n                \"type\":\"method\",\n                \"widget\":\"kbaseRNASeqAnalysisNew\",\n                \"cellId\":\"d6e33d1a-7681-4309-a982-8db9063cdc4c\",\n                \"title\":\"\",\n                \"time\":1485488090769\n            });\n        });\n        ", "text/plain": "<IPython.core.display.Javascript object>"}, "execution_count": 1, "metadata": {}, "output_type": "execute_result"}], "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseRNASeqAnalysisNew\",\n    {\n        \"output\": \"micrococcus.RNASeqData\",\n        \"workspace\": \"jplfaria:1485469584244\",\n        \"CreateRNASeqSampleSet\": {\n        \"Library_type\": \"PairedEnd\",\n        \"domain\": \"Prokaryotes\",\n        \"sample_ids\": [\"16837/5/1\", \"16837/10/1\", \"16837/12/1\", \"16837/4/1\", \"16837/7/1\", \"16837/8/1\", \"16837/6/1\", \"16837/11/1\", \"16837/13/1\"],\n        \"source\": \"ftp://ftp.igsb.anl.gov/jobs/3be3b95881848db2586045af97b23898/Project_ExxonRNAseq/\",\n        \"publication_id\": None,\n        \"platform\": \"Illumina\",\n        \"sampleset_id\": \"micrococcus.RNASeqData\",\n        \"num_samples\": 9,\n        \"sampleset_desc\": \"Micrococcus luteus RNA Seq Data consisting of 3 conditions (pyridine, acetate and glucose) and 3 replicates for each condition\",\n        \"sample_n_conditions\": [{\n        \"condition\": \"pyridine\",\n        \"sample_id\": \"16837/5/1\"\n    }, {\n        \"condition\": \"pyridine\",\n        \"sample_id\": \"16837/10/1\"\n    }, {\n        \"condition\": \"pyridine\",\n        \"sample_id\": \"16837/12/1\"\n    }, {\n        \"condition\": \"acetate\",\n        \"sample_id\": \"16837/4/1\"\n    }, {\n        \"condition\": \"acetate\",\n        \"sample_id\": \"16837/7/1\"\n    }, {\n        \"condition\": \"acetate\",\n        \"sample_id\": \"16837/8/1\"\n    }, {\n        \"condition\": \"glucose\",\n        \"sample_id\": \"16837/6/1\"\n    }, {\n        \"condition\": \"glucose\",\n        \"sample_id\": \"16837/11/1\"\n    }, {\n        \"condition\": \"glucose\",\n        \"sample_id\": \"16837/13/1\"\n    }],\n        \"condition\": [\"pyridine\", \"pyridine\", \"pyridine\", \"acetate\", \"acetate\", \"acetate\", \"glucose\", \"glucose\", \"glucose\"]\n    }\n    },\n    tag=\"dev\",\n    cell_id=\"d6e33d1a-7681-4309-a982-8db9063cdc4c\"\n)"}, {"cell_type": "code", "execution_count": 10, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "06cc3554899395bc0904e262eae9a61b61474f51", "id": "kb_util_dylan/KButil_Build_ReadsSet", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "desc", "target_property": "desc"}, {"input_parameter": "input_refs", "target_property": "input_refs", "target_type_transform": "list<resolved-ref>"}, {"input_parameter": "output_name", "target_property": "output_name"}], "kb_service_method": "KButil_Build_ReadsSet", "kb_service_name": "kb_util_dylan", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"service_method_output_path": ["0", "report_name"], "target_property": "report_name"}, {"service_method_output_path": ["0", "report_ref"], "target_property": "report_ref"}, {"constant_value": "5", "target_property": "report_window_line_height"}], "kb_service_url": "", "kb_service_version": "06cc3554899395bc0904e262eae9a61b61474f51"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["dylan"], "categories": ["active", "util", "reads"], "git_commit_hash": "06cc3554899395bc0904e262eae9a61b61474f51", "icon": {"url": "img?method_id=kb_util_dylan/KButil_Build_ReadsSet&image_name=kb-orange.png&tag=dev"}, "id": "kb_util_dylan/KButil_Build_ReadsSet", "input_types": ["KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary"], "module_name": "kb_util_dylan", "name": "Build ReadsSet", "namespace": "kb_util_dylan", "output_types": ["KBaseSets.ReadsSet"], "subtitle": "Allows user to create a ReadsSet", "tooltip": "Allows user to create a ReadsSet", "ver": "0.0.2"}, "job_id_output_field": "docker", "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "desc", "optional": 0, "short_hint": "Describe Purpose or Contents of Output ReadsSet", "text_options": {"is_output_name": 0, "placeholder": "Enter Description", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Description"}, {"advanced": 0, "allow_multiple": 1, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "input_refs", "optional": 0, "short_hint": "Add a list of Reads Lib Names here", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary"]}, "ui_class": "input", "ui_name": "Reads Lib Names"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "output_name", "optional": 0, "short_hint": "Name for the Output ReadsSet Collection", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseSets.ReadsSet"]}, "ui_class": "output", "ui_name": "Output ReadsSet Name"}], "widgets": {"input": "null", "output": "kbaseReportView"}}, "tag": "dev", "version": "0.0.2"}, "exec": {"jobState": {"awe_job_id": "3eec537c-b3c1-4198-8516-69e7075a92d7", "canceled": 0, "cancelled": 0, "cell_id": "4b3284cb-a57a-467a-9849-c569ecb359e1", "creation_time": 1485489379099, "exec_start_time": 1485489384951, "finish_time": 1485489401587, "finished": 1, "job_id": "588ac4e3e4b00a3e267bca6a", "job_state": "completed", "result": [{"report_name": "kb_util_dylan_build_readsset_report_1879d158-b3bf-4a8e-9139-ed9ad576298c", "report_ref": "16837/18/1"}], "run_id": "f4ce707b-fa3d-4ddd-b1bb-15db30d737a0", "status": ["2017-01-27T03:56:41+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1485489410281, "launchState": {"cell_id": "4b3284cb-a57a-467a-9849-c569ecb359e1", "event": "launched_job", "event_at": "2017-01-27T03:56:19.108924Z", "job_id": "588ac4e3e4b00a3e267bca6a", "run_id": "f4ce707b-fa3d-4ddd-b1bb-15db30d737a0"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-01-27T03:56:17.149Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-01-27T03:56:19.147Z"}, {"data": {"jobState": {"awe_job_id": "3eec537c-b3c1-4198-8516-69e7075a92d7", "awe_job_state": "queued", "cell_id": "4b3284cb-a57a-467a-9849-c569ecb359e1", "creation_time": 1485489379099, "finished": 0, "job_id": "588ac4e3e4b00a3e267bca6a", "job_state": "queued", "position": 1, "run_id": "f4ce707b-fa3d-4ddd-b1bb-15db30d737a0", "status": ["2017-01-27T03:56:19+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T03:56:19.571Z"}, {"data": {"jobState": {"awe_job_id": "3eec537c-b3c1-4198-8516-69e7075a92d7", "awe_job_state": "in-progress", "cell_id": "4b3284cb-a57a-467a-9849-c569ecb359e1", "creation_time": 1485489379099, "exec_start_time": 1485489384951, "finished": 0, "job_id": "588ac4e3e4b00a3e267bca6a", "job_state": "in-progress", "run_id": "f4ce707b-fa3d-4ddd-b1bb-15db30d737a0", "status": ["2017-01-27T03:56:24+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T03:56:30.176Z"}, {"data": {"jobState": {"awe_job_id": "3eec537c-b3c1-4198-8516-69e7075a92d7", "canceled": 0, "cancelled": 0, "cell_id": "4b3284cb-a57a-467a-9849-c569ecb359e1", "creation_time": 1485489379099, "exec_start_time": 1485489384951, "finish_time": 1485489401587, "finished": 1, "job_id": "588ac4e3e4b00a3e267bca6a", "job_state": "completed", "result": [{"report_name": "kb_util_dylan_build_readsset_report_1879d158-b3bf-4a8e-9139-ed9ad576298c", "report_ref": "16837/18/1"}], "run_id": "f4ce707b-fa3d-4ddd-b1bb-15db30d737a0", "status": ["2017-01-27T03:56:41+0000", "complete", "done", null, null, 1, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-01-27T03:56:50.281Z"}], "outputWidgetInfo": {"name": "kbaseReportView", "params": {"report_name": "kb_util_dylan_build_readsset_report_1879d158-b3bf-4a8e-9139-ed9ad576298c", "report_ref": "16837/18/1", "report_window_line_height": "5", "workspace_name": "jplfaria:1485469584244"}, "tag": "dev"}}, "fsm": {"currentState": {"mode": "success"}}, "newAppName": "Build ReadsSet", "outdated": true, "output": {"byJob": {"588ac4e3e4b00a3e267bca6a": {"cell": {"created": true, "id": "d283457c-ac69-431e-8bb1-b468b6987fc6"}, "createdAt": "Fri, 27 Jan 2017 03:56:50 GMT", "params": {"desc": "micrococcus RNASeq dataset", "input_refs": ["16837/5/1", "16837/10/1", "16837/12/1", "16837/4/1", "16837/7/1", "16837/8/1", "16837/6/1", "16837/11/1", "16837/13/1"], "output_name": "micrococcus.ReadsSet"}}}}, "params": {"desc": "micrococcus RNASeq dataset", "input_refs": ["16837/5/1", "16837/10/1", "16837/12/1", "16837/4/1", "16837/7/1", "16837/8/1", "16837/6/1", "16837/11/1", "16837/13/1"], "output_name": "micrococcus.ReadsSet"}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Fri, 27 Jan 2017 03:48:25 GMT", "id": "4b3284cb-a57a-467a-9849-c569ecb359e1", "info": {"label": "more...", "url": "/#appcatalog/app/kb_util_dylan/KButil_Build_ReadsSet/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Allows user to create a ReadsSet", "title": "Build ReadsSet"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_util_dylan/KButil_Build_ReadsSet\",\n    {\n        \"desc\": \"micrococcus RNASeq dataset\",\n        \"input_refs\": [\"16837/5/1\", \"16837/10/1\", \"16837/12/1\", \"16837/4/1\", \"16837/7/1\", \"16837/8/1\", \"16837/6/1\", \"16837/11/1\", \"16837/13/1\"],\n        \"output_name\": \"micrococcus.ReadsSet\"\n    },\n    tag=\"dev\",\n    version=\"06cc3554899395bc0904e262eae9a61b61474f51\",\n    cell_id=\"4b3284cb-a57a-467a-9849-c569ecb359e1\",\n    run_id=\"f4ce707b-fa3d-4ddd-b1bb-15db30d737a0\"\n)"}, {"cell_type": "code", "execution_count": 11, "metadata": {"kbase": {"attributes": {"created": "Fri, 27 Jan 2017 03:56:50 GMT", "icon": "arrow-right", "id": "d283457c-ac69-431e-8bb1-b468b6987fc6", "lastLoaded": "Thu, 18 Oct 2018 00:10:42 GMT", "status": "new", "title": "Output from Build ReadsSet"}, "dataCell": {}, "outputCell": {"jobId": "588ac4e3e4b00a3e267bca6a", "parentCellId": "4b3284cb-a57a-467a-9849-c569ecb359e1", "user-settings": {"showCodeInputArea": false}, "widget": {"name": "kbaseReportView", "params": {"report_name": "kb_util_dylan_build_readsset_report_1879d158-b3bf-4a8e-9139-ed9ad576298c", "report_ref": "16837/18/1", "report_window_line_height": "5", "workspace_name": "jplfaria:1485469584244"}, "tag": "dev"}}, "type": "output"}}, "outputs": [{"data": {"application/javascript": "\n        element.html(\"<div id='kb-vis-4427136d-2dc5-4ebb-b291-423abcd3914c' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-4427136d-2dc5-4ebb-b291-423abcd3914c'), {\n                \"data\": {\"report_window_line_height\": \"5\", \"report_ref\": \"16837/18/1\", \"workspace_name\": \"jplfaria:1485469584244\", \"report_name\": \"kb_util_dylan_build_readsset_report_1879d158-b3bf-4a8e-9139-ed9ad576298c\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseReportView\",\n                \"cellId\":\"d283457c-ac69-431e-8bb1-b468b6987fc6\",\n                \"title\":\"\",\n                \"time\":1485489410406\n            });\n        });\n        ", "text/plain": "<IPython.core.display.Javascript object>"}, "execution_count": 11, "metadata": {}, "output_type": "execute_result"}], "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseReportView\",\n    {\n        \"report_window_line_height\": \"5\",\n        \"report_ref\": \"16837/18/1\",\n        \"workspace_name\": \"jplfaria:1485469584244\",\n        \"report_name\": \"kb_util_dylan_build_readsset_report_1879d158-b3bf-4a8e-9139-ed9ad576298c\"\n    },\n    tag=\"dev\",\n    cell_id=\"d283457c-ac69-431e-8bb1-b468b6987fc6\"\n)"}, {"cell_type": "code", "execution_count": 12, "metadata": {"kbase": {"attributes": {"created": "Fri, 27 Jan 2017 03:56:59 GMT", "icon": "database", "id": "bf866821-14a3-457d-a120-f1bfe2d5bb42", "lastLoaded": "Thu, 18 Oct 2018 00:10:42 GMT", "status": "new", "subtitle": "v3 - KBaseSets.ReadsSet-1.0", "title": "micrococcus.ReadsSet"}, "dataCell": {"objectInfo": {"chsum": "9c7f62a0ecc08d0435001b8509879b6e", "id": 15, "meta": {"description": "micrococcus RNASeq dataset", "item_count": "9"}, "name": "micrococcus.ReadsSet", "save_date": "2017-01-27T03:56:40+0000", "saved_by": "jplfaria", "size": 538, "type": "KBaseSets.ReadsSet-1.0", "version": 3, "ws_id": 16837, "ws_name": "jplfaria:1485469584244"}, "user-settings": {"showCodeInputArea": false}}, "type": "data"}}, "outputs": [{"data": {"application/javascript": "\n        element.html(\"<div id='kb-vis-b1e8cad5-01a4-4f42-9b6b-0ec5db693174' class='kb-vis-area'></div>\");\n\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-b1e8cad5-01a4-4f42-9b6b-0ec5db693174'), {\n                \"data\": {\"output\": {\"wsId\": \"jplfaria:1485469584244\", \"objId\": \"micrococcus.ReadsSet\"}, \"type_spec\": {\"import_method_ids\": [], \"subtitle\": \"ReadsSet object\", \"name\": \"ReadsSet\", \"export_functions\": {}, \"view_method_ids\": [\"NarrativeViewers/view_reads_set\"], \"description\": \"<p>This type describes a set of Reads.</p>\\n\", \"type_name\": \"KBaseSets.ReadsSet\", \"tooltip\": \"ReadsSet object\", \"landing_page_url_prefix\": \"reads_set\", \"icon\": {\"url\": \"img?type_name=KBaseSets.ReadsSet&image_name=none\"}}, \"info_tuple\": [15, \"micrococcus.ReadsSet\", \"KBaseSets.ReadsSet-1.0\", \"2017-01-27T03:56:40+0000\", 3, \"jplfaria\", 16837, \"jplfaria:1485469584244\", \"9c7f62a0ecc08d0435001b8509879b6e\", 538, {\"description\": \"micrococcus RNASeq dataset\", \"item_count\": \"9\"}], \"app_spec\": {\"info\": {\"ver\": \"0.0.10\", \"name\": \"View ReadsSet\", \"subtitle\": \"View and explore a ReadsSet object in your workspace. [5]\", \"output_types\": [], \"app_type\": \"viewer\", \"namespace\": \"NarrativeViewers\", \"tooltip\": \"View and explore a ReadsSet object in your workspace. [5]\", \"git_commit_hash\": \"5ccf202a4c6981f248bb2934fe3a7bb623ca2b19\", \"input_types\": [\"KBaseSets.ReadsSet\"], \"authors\": [], \"module_name\": \"NarrativeViewers\", \"id\": \"NarrativeViewers/view_reads_set\", \"categories\": [\"viewers\"]}, \"widgets\": {\"input\": \"null\", \"output\": \"kbaseReadsSetView\"}, \"fixed_parameters\": [], \"parameters\": [{\"field_type\": \"text\", \"ui_class\": \"input\", \"allow_multiple\": 0, \"description\": \"select the ReadsSet you want to view [5.1]\", \"text_options\": {\"is_output_name\": 0, \"placeholder\": \"\", \"regex_constraint\": [], \"valid_ws_types\": [\"KBaseSets.ReadsSet\"]}, \"disabled\": 0, \"short_hint\": \"select the ReadsSet you want to view [5.1]\", \"default_values\": [\"\"], \"ui_name\": \"ReadsSet\", \"optional\": 0, \"id\": \"param0\", \"advanced\": 0}], \"behavior\": {\"output_mapping\": [{\"target_property\": \"objId\", \"input_parameter\": \"param0\"}, {\"target_property\": \"wsId\", \"narrative_system_variable\": \"workspace\"}]}}},\n                \"type\":\"viewer\",\n                \"widget\":\"kbaseNarrativeDataCell\",\n                \"cellId\":\"bf866821-14a3-457d-a120-f1bfe2d5bb42\",\n                \"title\":\"micrococcus.ReadsSet\",\n                \"time\":1485489419794\n            });\n        });\n        ", "text/plain": "<IPython.core.display.Javascript object>"}, "execution_count": 12, "metadata": {}, "output_type": "execute_result"}], "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"16837/15/3\",\n    cell_id=\"bf866821-14a3-457d-a120-f1bfe2d5bb42\",\n    title=\"micrococcus.ReadsSet\",\n    tag=\"dev\"\n)"}, {"cell_type": "code", "execution_count": 13, "metadata": {"collapsed": true, "kbase": {"attributes": {"created": "Fri, 27 Jan 2017 03:57:44 GMT", "icon": "bar-chart", "id": "fd1567cd-595e-44a1-9ec1-2f8ab44acd94", "info": {"label": "more...", "url": "/#appcatalog/app/EditorApps/reads_set_editor/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:43 GMT", "status": "new", "subtitle": "Create and edit a set of sequence reads objects.", "title": "Reads Set Editor"}, "cellState": {"icon": "bar-chart"}, "editorCell": {"app": {"gitCommitHash": "a3d855c161b183b4931290c6dbd1ae32f9c44fdb", "id": "EditorApps/reads_set_editor", "spec": {"behavior": {"kb_service_input_mapping": [], "kb_service_method": "save_reads_set_v1", "kb_service_name": "SetAPI", "kb_service_output_mapping": [], "kb_service_url": "", "kb_service_version": "a3d855c161b183b4931290c6dbd1ae32f9c44fdb"}, "fixed_parameters": [], "info": {"app_type": "editor", "authors": ["marcin", "eapearson"], "categories": ["active"], "git_commit_hash": "a3d855c161b183b4931290c6dbd1ae32f9c44fdb", "icon": {"url": "img?method_id=EditorApps/reads_set_editor&image_name=icon.png&tag=dev"}, "id": "EditorApps/reads_set_editor", "input_types": [], "module_name": "EditorApps", "name": "Reads Set Editor", "namespace": "EditorApps", "output_types": [], "subtitle": "Create and edit a set of sequence reads objects.", "tooltip": "Create and edit a set of sequence reads objects.", "ver": "0.0.1"}, "job_id_output_field": "docker", "parameters": [], "widgets": {"input": "reads_set_editor", "output": "null"}}, "tag": "dev", "version": "0.0.1"}, "current": {"set": {"info": {"checksum": "d3f4c91a070bc7c1268e02679e50b955", "id": 15, "metadata": {"description": "micrococcus RNASeq dataset", "item_count": "9"}, "name": "micrococcus.ReadsSet", "obj_id": "ws.16837.obj.15", "ref": "16837/15/4", "saveDate": "2017-01-27T03:58:37.000Z", "save_date": "2017-01-27T03:58:37+0000", "saved_by": "jplfaria", "size": 403, "type": "KBaseSets.ReadsSet-1.0", "typeMajorVersion": "1", "typeMinorVersion": "0", "typeModule": "KBaseSets", "typeName": "ReadsSet", "version": 4, "ws": "jplfaria:1485469584244", "wsid": 16837}, "ref": "16837/15/4"}}, "editor": {"type": "reads_set_editor"}, "editorState": {"changed": false, "currentRunId": "cb82c80e-43b3-46d0-9b99-e553c76264df", "touched": false}, "fsm": {"currentState": {"data": "changed", "mode": "editing", "params": "complete"}}, "params": null, "state": {"code": null, "edit": "editing", "params": null, "request": null, "result": null}, "user-settings": {"showCodeInputArea": false}}, "type": "editor"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_dynamic_service(\n    \"EditorApps/reads_set_editor\",\n    [{\n    \"workspace\": 16962,\n    \"output_object_name\": \"micrococcus.ReadsSet\",\n    \"data\": {\n        \"description\": \"micrococcus RNASeq dataset\",\n        \"items\": [{\n            \"label\": \"pyridine\",\n            \"ref\": \"16837/5/1\"\n        }, {\n            \"label\": \"pyridine\",\n            \"ref\": \"16837/10/1\"\n        }, {\n            \"label\": \"pyridine\",\n            \"ref\": \"16837/12/1\"\n        }, {\n            \"label\": \"acetate\",\n            \"ref\": \"16837/4/1\"\n        }, {\n            \"label\": \"acetate\",\n            \"ref\": \"16837/7/1\"\n        }, {\n            \"label\": \"acetate\",\n            \"ref\": \"16837/8/1\"\n        }, {\n            \"label\": \"glucose\",\n            \"ref\": \"16837/6/1\"\n        }, {\n            \"label\": \"glucose\",\n            \"ref\": \"16837/11/1\"\n        }, {\n            \"label\": \"glucose\",\n            \"ref\": \"16837/13/1\"\n        }]\n    }\n}],\n    tag=\"dev\",\n    cell_id=\"fd1567cd-595e-44a1-9ec1-2f8ab44acd94\",\n    run_id=\"cb82c80e-43b3-46d0-9b99-e553c76264df\"\n)"}, {"cell_type": "markdown", "metadata": {"kbase": {"attributes": {"icon": "paragraph", "title": "Align sequencing reads against reference genome"}, "cellState": {"selected": false, "showTitle": false}}}, "source": "\n### Align sequencing reads against reference genome"}, {"cell_type": "code", "execution_count": 1, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "67dc758b67bd79c8140ea9965022c35401868e5f", "id": "KBaseRNASeq/build_bowtie2_index", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "ws_id"}, {"input_parameter": "input_genome", "target_property": "reference"}, {"input_parameter": "out_index_name", "target_property": "output_obj_name"}], "kb_service_method": "BuildBowtie2Index", "kb_service_name": "KBaseRNASeq", "kb_service_output_mapping": [{"service_method_output_path": ["0", "report_name"], "target_property": "report_name"}, {"service_method_output_path": ["0", "report_ref"], "target_property": "report_ref"}, {"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"constant_value": "5", "target_property": "report_window_line_height"}], "kb_service_url": "", "kb_service_version": "67dc758b67bd79c8140ea9965022c35401868e5f"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": [], "categories": ["active", "expression", "sequence"], "git_commit_hash": "67dc758b67bd79c8140ea9965022c35401868e5f", "icon": {"url": "img?method_id=KBaseRNASeq/build_bowtie2_index&image_name=bowtie-cyan.png&tag=dev"}, "id": "KBaseRNASeq/build_bowtie2_index", "input_types": ["KBaseGenomes.Genome"], "module_name": "KBaseRNASeq", "name": "Build Bowtie2 Index", "namespace": "KBaseRNASeq", "output_types": ["KBaseRNASeq.Bowtie2Indexes"], "subtitle": "Index the sequences in a reference genome using Bowtie2.", "tooltip": "Index the sequences in a reference genome using Bowtie2.", "ver": "0.0.5"}, "job_id_output_field": "docker", "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "input_genome", "optional": 0, "short_hint": "The input genome to be indexed", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "ui_class": "input", "ui_name": "Genome"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "out_index_name", "optional": 0, "short_hint": "The indexed genome as an output", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.Bowtie2Indexes"]}, "ui_class": "output", "ui_name": "Bowtie2 Index"}], "replacement_text": "Creates a new bowtie2 Index  for {{{input_genome}}}", "widgets": {"input": "null", "output": "no-display"}}, "tag": "dev", "version": "0.0.5"}, "exec": {"jobState": {"awe_job_id": "eb141476-9bb9-44a1-8f83-0acacad70e59", "awe_job_state": "in-progress", "cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "creation_time": 1506214334935, "exec_start_time": 1506214340051, "finished": 0, "job_id": "59c701bee4b0d549f125557c", "job_state": "in-progress", "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e", "status": ["2017-09-24T00:52:20+0000", "started", "running", null, null, 0, 0], "token_id": "173a5de4-c524-4848-abed-9c3c01e98dd7", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1506214342778, "launchState": {"cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "event": "launched_job", "event_at": "2017-09-24T00:52:14.944822Z", "job_id": "59c701bee4b0d549f125557c", "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-09-24T00:52:10.393Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-09-24T00:52:11.021Z"}, {"data": {"jobState": {"awe_job_id": "eb141476-9bb9-44a1-8f83-0acacad70e59", "awe_job_state": "queued", "cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "creation_time": 1506214334935, "finished": 0, "job_id": "59c701bee4b0d549f125557c", "job_state": "queued", "position": 2, "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e", "status": ["2017-09-24T00:52:14+0000", "created", null, null, null, null, null], "token_id": "173a5de4-c524-4848-abed-9c3c01e98dd7", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:52:11.235Z"}, {"data": {"jobState": {"awe_job_id": "eb141476-9bb9-44a1-8f83-0acacad70e59", "awe_job_state": "queued", "cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "creation_time": 1506214334935, "finished": 0, "job_id": "59c701bee4b0d549f125557c", "job_state": "queued", "position": 2, "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e", "status": ["2017-09-24T00:52:14+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:52:11.431Z"}, {"data": {"jobState": {"awe_job_id": "eb141476-9bb9-44a1-8f83-0acacad70e59", "awe_job_state": "queued", "cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "creation_time": 1506214334935, "finished": 0, "job_id": "59c701bee4b0d549f125557c", "job_state": "queued", "position": 2, "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e", "status": ["2017-09-24T00:52:14+0000", "created", null, null, null, null, null], "token_id": "173a5de4-c524-4848-abed-9c3c01e98dd7", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:52:13.271Z"}, {"data": {"jobState": {"awe_job_id": "eb141476-9bb9-44a1-8f83-0acacad70e59", "awe_job_state": "in-progress", "cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "creation_time": 1506214334935, "exec_start_time": 1506214340051, "finished": 0, "job_id": "59c701bee4b0d549f125557c", "job_state": "in-progress", "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e", "status": ["2017-09-24T00:52:20+0000", "started", "running", null, null, 0, 0], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:52:21.644Z"}, {"data": {"jobState": {"awe_job_id": "eb141476-9bb9-44a1-8f83-0acacad70e59", "awe_job_state": "in-progress", "cell_id": "9711a006-c396-4bfd-b633-229330549ba5", "creation_time": 1506214334935, "exec_start_time": 1506214340051, "finished": 0, "job_id": "59c701bee4b0d549f125557c", "job_state": "in-progress", "run_id": "828949b2-ec5c-4335-86ca-7f7f54c8577e", "status": ["2017-09-24T00:52:20+0000", "started", "running", null, null, 0, 0], "token_id": "173a5de4-c524-4848-abed-9c3c01e98dd7", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:52:22.647Z"}]}, "fsm": {"currentState": {"mode": "canceling"}}, "newAppName": "Build Bowtie2 Index - v2.2.9", "outdated": true, "output": {"byJob": {}}, "params": {"input_genome": "micrococcus_luteus.genome", "out_index_name": "bowtie.index"}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Fri, 27 Jan 2017 23:04:45 GMT", "id": "9711a006-c396-4bfd-b633-229330549ba5", "info": {"label": "more...", "url": "/#appcatalog/app/KBaseRNASeq/build_bowtie2_index/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Index the sequences in a reference genome using Bowtie2.", "title": "Build Bowtie2 Index"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"KBaseRNASeq/build_bowtie2_index\",\n    {\n        \"input_genome\": \"micrococcus_luteus.genome\",\n        \"out_index_name\": \"bowtie.index\"\n    },\n    tag=\"dev\",\n    version=\"67dc758b67bd79c8140ea9965022c35401868e5f\",\n    cell_id=\"9711a006-c396-4bfd-b633-229330549ba5\",\n    run_id=\"828949b2-ec5c-4335-86ca-7f7f54c8577e\"\n)"}, {"cell_type": "code", "execution_count": 2, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "67dc758b67bd79c8140ea9965022c35401868e5f", "id": "KBaseRNASeq/align_reads_using_hisat2", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "ws_id"}, {"input_parameter": "sampleset_id", "target_property": "sampleset_id"}, {"input_parameter": "genome_id", "target_property": "genome_id"}, {"input_parameter": "num_threads", "target_property": "num_threads"}, {"input_parameter": "quality_score", "target_property": "quality_score"}, {"input_parameter": "skip", "target_property": "skip"}, {"input_parameter": "trim5", "target_property": "trim5"}, {"input_parameter": "trim3", "target_property": "trim3"}, {"input_parameter": "np", "target_property": "np"}, {"input_parameter": "min_intron_length", "target_property": "min_intron_length"}, {"input_parameter": "max_intron_length", "target_property": "max_intron_length"}, {"input_parameter": "no_spliced_alignment", "target_property": "no_spliced_alignment"}, {"input_parameter": "transcriptome_mapping_only", "target_property": "transcriptome_mapping_only"}, {"input_parameter": "tailor_alignments", "target_property": "tailor_alignments"}, {"input_parameter": "minins", "target_property": "minins"}, {"input_parameter": "maxins", "target_property": "maxins"}, {"input_parameter": "orientation", "target_property": "orientation"}], "kb_service_method": "Hisat2Call", "kb_service_name": "KBaseRNASeq", "kb_service_output_mapping": [{"service_method_output_path": ["0", "output"], "target_property": "output"}, {"service_method_output_path": ["0", "workspace"], "target_property": "workspace"}], "kb_service_url": "", "kb_service_version": "67dc758b67bd79c8140ea9965022c35401868e5f"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": [], "categories": ["active", "expression", "sequence"], "git_commit_hash": "67dc758b67bd79c8140ea9965022c35401868e5f", "id": "KBaseRNASeq/align_reads_using_hisat2", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseGenomes.Genome", "KBaseRNASeq.RNASeqSampleSet", "KBaseSets.ReadsSet"], "module_name": "KBaseRNASeq", "name": "Align Reads using HISAT2", "namespace": "KBaseRNASeq", "output_types": [], "subtitle": "Align sequencing reads to long reference sequences using HISAT2", "tooltip": "Align sequencing reads to long reference sequences using HISAT2", "ver": "0.0.5"}, "job_id_output_field": "docker", "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "sampleset_id", "optional": 0, "short_hint": "Select the RNA-seq read sample set associated with the RNA-seq experiment. Alternatively, if you have only one sample of RNA-seq reads, select the corresponding library object.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseSets.ReadsSet", "KBaseRNASeq.RNASeqSampleSet", "KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "ui_class": "input", "ui_name": "RNA-seq Sample or Sample Set"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "genome_id", "optional": 0, "short_hint": "Select the Genome to align the reads", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "ui_class": "input", "ui_name": "Genome"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["2"], "description": "", "disabled": 0, "field_type": "text", "id": "num_threads", "optional": 1, "short_hint": "Number of computational threads to align reads.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Number of Threads"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["phred33"], "description": "phred33 is used by Illumina starting with v1.8", "disabled": 0, "dropdown_options": {"options": [{"display": "phred33", "index": 0, "value": "phred33"}, {"display": "phred64", "index": 1, "value": "phred64"}]}, "field_type": "dropdown", "id": "quality_score", "optional": 1, "short_hint": "Select the quality score type depending on the sequencing platform", "ui_class": "parameter", "ui_name": "Alignment Quality Score Type"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["20"], "description": "", "disabled": 0, "field_type": "text", "id": "min_intron_length", "optional": 1, "short_hint": "HISAT2 will ignore donor/acceptor pairs closer than this many bases apart.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Minimum Intron Length"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["500000"], "description": "", "disabled": 0, "field_type": "text", "id": "max_intron_length", "optional": 1, "short_hint": "HISAT2 will ignore donor/acceptor pairs farther than this many bases apart.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Maximum Intron Length"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": [""], "description": "", "disabled": 0, "field_type": "checkbox", "id": "no_spliced_alignment", "optional": 1, "short_hint": "HISAT2 will disable splice alignment.", "ui_class": "parameter", "ui_name": "Disable Splice Alignment"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": [""], "description": "", "disabled": 0, "field_type": "checkbox", "id": "transcriptome_mapping_only", "optional": 1, "short_hint": "HISAT2 will report only those alignments within known transcripts.", "ui_class": "parameter", "ui_name": "Transcriptome Mapping Only"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["dta-cufflinks"], "description": "", "disabled": 0, "dropdown_options": {"options": [{"display": "dta-cufflinks", "index": 0, "value": "dta-cufflinks"}, {"display": "dta", "index": 1, "value": "dta"}]}, "field_type": "dropdown", "id": "tailor_alignments", "optional": 0, "short_hint": "HISAT2 will report alignments tailored for transcript assemblers including StringTie or Cufflinks based on the selected option.", "ui_class": "parameter", "ui_name": "Tailor Alignments for different Tools"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Skip the first n reads or pairs in the input", "disabled": 0, "field_type": "text", "id": "skip", "optional": 1, "short_hint": "Skip the first n reads or pairs in the input", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Skip the first n reads or pairs in the input"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Trim the base-pairs from 5' end before alignment, if needed. By default, it is 0.", "disabled": 0, "field_type": "text", "id": "trim5", "optional": 1, "short_hint": "Trim the base-pairs from 5' (left) end of each read before alignment", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Trim Bases From 5'end"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Trim the base-pairs from 3' end before alignment, if needed. By default, it is 0.", "disabled": 0, "field_type": "text", "id": "trim3", "optional": 1, "short_hint": "Trim the base-pairs from 3' (right) end of each read before alignment", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Trim Bases From 3'end"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["1"], "description": "By default, penalty is 1.", "disabled": 0, "field_type": "text", "id": "np", "optional": 1, "short_hint": "Sets the penalty for positions where the read, reference, or both, contain an ambiguous character such as N.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Penalty"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "By default, 0 is used.", "disabled": 0, "field_type": "text", "id": "minins", "optional": 1, "short_hint": "Select the minimum fragment length for valid untrimmed paired-end alignments", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Minimum Fragment Length For Paired-end Alignments"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["500"], "description": "By default, 500 is used.", "disabled": 0, "field_type": "text", "id": "maxins", "optional": 1, "short_hint": "Select the maximum fragment length for valid untrimmed paired-end alignments", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Maximum Fragment Length For Paired-end Alignments"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["fr"], "description": "By default, fr is used.", "disabled": 0, "dropdown_options": {"options": [{"display": "fr", "index": 0, "value": "fr"}, {"display": "rf", "index": 1, "value": "rf"}, {"display": "ff", "index": 2, "value": "ff"}]}, "field_type": "dropdown", "id": "orientation", "optional": 1, "short_hint": "Select the upstream/downstream mate orientations for a valid paired-end alignments against the forward reference strand.", "ui_class": "parameter", "ui_name": "Orientation"}], "widgets": {"input": "null", "output": "kbaseRNASeqPieNew"}}, "tag": "dev", "version": "0.0.5"}, "fsm": {"currentState": {"code": "built", "mode": "editing", "params": "complete"}}, "newAppName": "Align Reads using HISAT2 - v2.0.4", "outdated": true, "output": {"byJob": {}}, "params": {"genome_id": "micrococcus_luteus.genome", "max_intron_length": 500000, "maxins": 500, "min_intron_length": 20, "minins": 0, "no_spliced_alignment": 0, "np": 1, "num_threads": 2, "orientation": "fr", "quality_score": "phred33", "sampleset_id": "micrococcus.RNASeqData", "skip": 0, "tailor_alignments": "dta-cufflinks", "transcriptome_mapping_only": 0, "trim3": 0, "trim5": 0}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Fri, 27 Jan 2017 22:34:59 GMT", "id": "3a05f03c-337f-488a-9de8-417480feb808", "info": {"label": "more...", "url": "/#appcatalog/app/KBaseRNASeq/align_reads_using_hisat2/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Align sequencing reads to long reference sequences using HISAT2", "title": "Align Reads using HISAT2"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"KBaseRNASeq/align_reads_using_hisat2\",\n    {\n        \"no_spliced_alignment\": 0,\n        \"min_intron_length\": 20,\n        \"orientation\": \"fr\",\n        \"tailor_alignments\": \"dta-cufflinks\",\n        \"max_intron_length\": 500000,\n        \"transcriptome_mapping_only\": 0,\n        \"quality_score\": \"phred33\",\n        \"sampleset_id\": \"micrococcus.RNASeqData\",\n        \"maxins\": 500,\n        \"minins\": 0,\n        \"genome_id\": \"micrococcus_luteus.genome\",\n        \"num_threads\": 2,\n        \"skip\": 0,\n        \"np\": 1,\n        \"trim3\": 0,\n        \"trim5\": 0\n    },\n    tag=\"dev\",\n    version=\"67dc758b67bd79c8140ea9965022c35401868e5f\",\n    cell_id=\"3a05f03c-337f-488a-9de8-417480feb808\",\n    run_id=\"760f46bd-6351-4db2-903d-2684c8ae0e0b\"\n)"}, {"cell_type": "code", "execution_count": 3, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "67dc758b67bd79c8140ea9965022c35401868e5f", "id": "KBaseRNASeq/align_reads_using_hisat2", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "ws_id"}, {"input_parameter": "sampleset_id", "target_property": "sampleset_id"}, {"input_parameter": "genome_id", "target_property": "genome_id"}, {"input_parameter": "num_threads", "target_property": "num_threads"}, {"input_parameter": "quality_score", "target_property": "quality_score"}, {"input_parameter": "skip", "target_property": "skip"}, {"input_parameter": "trim5", "target_property": "trim5"}, {"input_parameter": "trim3", "target_property": "trim3"}, {"input_parameter": "np", "target_property": "np"}, {"input_parameter": "min_intron_length", "target_property": "min_intron_length"}, {"input_parameter": "max_intron_length", "target_property": "max_intron_length"}, {"input_parameter": "no_spliced_alignment", "target_property": "no_spliced_alignment"}, {"input_parameter": "transcriptome_mapping_only", "target_property": "transcriptome_mapping_only"}, {"input_parameter": "tailor_alignments", "target_property": "tailor_alignments"}, {"input_parameter": "minins", "target_property": "minins"}, {"input_parameter": "maxins", "target_property": "maxins"}, {"input_parameter": "orientation", "target_property": "orientation"}], "kb_service_method": "Hisat2Call", "kb_service_name": "KBaseRNASeq", "kb_service_output_mapping": [{"service_method_output_path": ["0", "output"], "target_property": "output"}, {"service_method_output_path": ["0", "workspace"], "target_property": "workspace"}], "kb_service_url": "", "kb_service_version": "67dc758b67bd79c8140ea9965022c35401868e5f"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": [], "categories": ["active", "expression", "sequence"], "git_commit_hash": "67dc758b67bd79c8140ea9965022c35401868e5f", "id": "KBaseRNASeq/align_reads_using_hisat2", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseGenomes.Genome", "KBaseRNASeq.RNASeqSampleSet", "KBaseSets.ReadsSet"], "module_name": "KBaseRNASeq", "name": "Align Reads using HISAT2", "namespace": "KBaseRNASeq", "output_types": [], "subtitle": "Align sequencing reads to long reference sequences using HISAT2", "tooltip": "Align sequencing reads to long reference sequences using HISAT2", "ver": "0.0.5"}, "job_id_output_field": "docker", "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "sampleset_id", "optional": 0, "short_hint": "Select the RNA-seq read sample set associated with the RNA-seq experiment. Alternatively, if you have only one sample of RNA-seq reads, select the corresponding library object.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseSets.ReadsSet", "KBaseRNASeq.RNASeqSampleSet", "KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary"]}, "ui_class": "input", "ui_name": "RNA-seq Sample or Sample Set"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "genome_id", "optional": 0, "short_hint": "Select the Genome to align the reads", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome"]}, "ui_class": "input", "ui_name": "Genome"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["2"], "description": "", "disabled": 0, "field_type": "text", "id": "num_threads", "optional": 1, "short_hint": "Number of computational threads to align reads.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Number of Threads"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["phred33"], "description": "phred33 is used by Illumina starting with v1.8", "disabled": 0, "dropdown_options": {"options": [{"display": "phred33", "index": 0, "value": "phred33"}, {"display": "phred64", "index": 1, "value": "phred64"}]}, "field_type": "dropdown", "id": "quality_score", "optional": 1, "short_hint": "Select the quality score type depending on the sequencing platform", "ui_class": "parameter", "ui_name": "Alignment Quality Score Type"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["20"], "description": "", "disabled": 0, "field_type": "text", "id": "min_intron_length", "optional": 1, "short_hint": "HISAT2 will ignore donor/acceptor pairs closer than this many bases apart.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Minimum Intron Length"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["500000"], "description": "", "disabled": 0, "field_type": "text", "id": "max_intron_length", "optional": 1, "short_hint": "HISAT2 will ignore donor/acceptor pairs farther than this many bases apart.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Maximum Intron Length"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": [""], "description": "", "disabled": 0, "field_type": "checkbox", "id": "no_spliced_alignment", "optional": 1, "short_hint": "HISAT2 will disable splice alignment.", "ui_class": "parameter", "ui_name": "Disable Splice Alignment"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": [""], "description": "", "disabled": 0, "field_type": "checkbox", "id": "transcriptome_mapping_only", "optional": 1, "short_hint": "HISAT2 will report only those alignments within known transcripts.", "ui_class": "parameter", "ui_name": "Transcriptome Mapping Only"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["dta-cufflinks"], "description": "", "disabled": 0, "dropdown_options": {"options": [{"display": "dta-cufflinks", "index": 0, "value": "dta-cufflinks"}, {"display": "dta", "index": 1, "value": "dta"}]}, "field_type": "dropdown", "id": "tailor_alignments", "optional": 0, "short_hint": "HISAT2 will report alignments tailored for transcript assemblers including StringTie or Cufflinks based on the selected option.", "ui_class": "parameter", "ui_name": "Tailor Alignments for different Tools"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Skip the first n reads or pairs in the input", "disabled": 0, "field_type": "text", "id": "skip", "optional": 1, "short_hint": "Skip the first n reads or pairs in the input", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Skip the first n reads or pairs in the input"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Trim the base-pairs from 5' end before alignment, if needed. By default, it is 0.", "disabled": 0, "field_type": "text", "id": "trim5", "optional": 1, "short_hint": "Trim the base-pairs from 5' (left) end of each read before alignment", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Trim Bases From 5'end"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Trim the base-pairs from 3' end before alignment, if needed. By default, it is 0.", "disabled": 0, "field_type": "text", "id": "trim3", "optional": 1, "short_hint": "Trim the base-pairs from 3' (right) end of each read before alignment", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Trim Bases From 3'end"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["1"], "description": "By default, penalty is 1.", "disabled": 0, "field_type": "text", "id": "np", "optional": 1, "short_hint": "Sets the penalty for positions where the read, reference, or both, contain an ambiguous character such as N.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Penalty"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "By default, 0 is used.", "disabled": 0, "field_type": "text", "id": "minins", "optional": 1, "short_hint": "Select the minimum fragment length for valid untrimmed paired-end alignments", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Minimum Fragment Length For Paired-end Alignments"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["500"], "description": "By default, 500 is used.", "disabled": 0, "field_type": "text", "id": "maxins", "optional": 1, "short_hint": "Select the maximum fragment length for valid untrimmed paired-end alignments", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Maximum Fragment Length For Paired-end Alignments"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["fr"], "description": "By default, fr is used.", "disabled": 0, "dropdown_options": {"options": [{"display": "fr", "index": 0, "value": "fr"}, {"display": "rf", "index": 1, "value": "rf"}, {"display": "ff", "index": 2, "value": "ff"}]}, "field_type": "dropdown", "id": "orientation", "optional": 1, "short_hint": "Select the upstream/downstream mate orientations for a valid paired-end alignments against the forward reference strand.", "ui_class": "parameter", "ui_name": "Orientation"}], "widgets": {"input": "null", "output": "kbaseRNASeqPieNew"}}, "tag": "dev", "version": "0.0.5"}, "fsm": {"currentState": {"code": "built", "mode": "editing", "params": "complete"}}, "newAppName": "Align Reads using HISAT2 - v2.0.4", "outdated": true, "output": {"byJob": {}}, "params": {"genome_id": "micrococcus_luteus.genome", "max_intron_length": 500000, "maxins": 500, "min_intron_length": 20, "minins": 0, "no_spliced_alignment": 0, "np": 1, "num_threads": 2, "orientation": "fr", "quality_score": "phred33", "sampleset_id": "micrococcus.RNASeqData", "skip": 0, "tailor_alignments": "dta-cufflinks", "transcriptome_mapping_only": 0, "trim3": 0, "trim5": 0}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Fri, 27 Jan 2017 23:06:22 GMT", "id": "05196bee-b830-42f3-950c-d085d074e193", "info": {"label": "more...", "url": "/#appcatalog/app/KBaseRNASeq/align_reads_using_hisat2/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Align sequencing reads to long reference sequences using HISAT2", "title": "Align Reads using HISAT2"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"KBaseRNASeq/align_reads_using_hisat2\",\n    {\n        \"no_spliced_alignment\": 0,\n        \"min_intron_length\": 20,\n        \"orientation\": \"fr\",\n        \"tailor_alignments\": \"dta-cufflinks\",\n        \"max_intron_length\": 500000,\n        \"transcriptome_mapping_only\": 0,\n        \"quality_score\": \"phred33\",\n        \"sampleset_id\": \"micrococcus.RNASeqData\",\n        \"maxins\": 500,\n        \"minins\": 0,\n        \"genome_id\": \"micrococcus_luteus.genome\",\n        \"num_threads\": 2,\n        \"skip\": 0,\n        \"np\": 1,\n        \"trim3\": 0,\n        \"trim5\": 0\n    },\n    tag=\"dev\",\n    version=\"67dc758b67bd79c8140ea9965022c35401868e5f\",\n    cell_id=\"05196bee-b830-42f3-950c-d085d074e193\",\n    run_id=\"9c316d11-1124-4d98-8b39-64208f30a801\"\n)"}, {"cell_type": "code", "execution_count": 1, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "7034d1a89302d84c9fdaaabf41cd7d1f32d12644", "id": "KBaseRNASeq/describe_rnaseq_experiment", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "ws_id"}, {"input_parameter": "sampleset_id", "target_property": "sampleset_id"}, {"input_parameter": "sampleset_desc", "target_property": "sampleset_desc"}, {"input_parameter": "platform", "target_property": "platform"}, {"input_parameter": "Library_type", "target_property": "Library_type"}, {"input_parameter": "sample_n_conditions", "target_property": "sample_n_conditions"}, {"input_parameter": "domain", "target_property": "domain"}, {"input_parameter": "source", "target_property": "source"}, {"input_parameter": "publication_id", "target_property": "publication_id"}], "kb_service_method": "CreateRNASeqSampleSet", "kb_service_name": "KBaseRNASeq", "kb_service_output_mapping": [{"input_parameter": "sampleset_id", "target_property": "output"}, {"narrative_system_variable": "workspace", "target_property": "workspace"}, {"service_method_output_path": ["0"], "target_property": "CreateRNASeqSampleSet"}], "kb_service_url": "", "kb_service_version": "7034d1a89302d84c9fdaaabf41cd7d1f32d12644"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": [], "categories": ["active", "expression"], "git_commit_hash": "7034d1a89302d84c9fdaaabf41cd7d1f32d12644", "icon": {"url": "img?method_id=KBaseRNASeq/describe_rnaseq_experiment&image_name=rnaseq-yellow.png&tag=beta"}, "id": "KBaseRNASeq/describe_rnaseq_experiment", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary"], "module_name": "KBaseRNASeq", "name": "Create RNA-seq Sample Set", "namespace": "KBaseRNASeq", "output_types": ["KBaseRNASeq.RNASeqSampleSet"], "subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "tooltip": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "ver": "1.0.0"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 0, "allow_multiple": 1, "description": "", "id": "sample_n_conditions", "optional": 0, "parameter_ids": ["sample_id", "condition"], "short_hint": "For each sample, select the sample and provide the short label for condition. All replicates for the same condition must have same label.", "ui_name": "RNA-seq Sample and Condition", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "sampleset_id", "optional": 0, "short_hint": "Name of the RNA-seq sample set output object.", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseRNASeq.RNASeqSampleSet"]}, "ui_class": "output", "ui_name": "RNA-seq Sample Set"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "textarea", "id": "sampleset_desc", "optional": 1, "short_hint": "The detailed description of the input RNA-seq samples", "textarea_options": {"n_rows": 4, "placeholder": ""}, "ui_class": "parameter", "ui_name": "Sample Set Description"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "platform", "optional": 1, "short_hint": "The platform used for sequencing (e.g Illumina)", "ui_class": "parameter", "ui_name": "Platform"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "dropdown_options": {"options": [{"display": "SingleEnd", "index": 0, "value": "SingleEnd"}, {"display": "PairedEnd", "index": 1, "value": "PairedEnd"}]}, "field_type": "dropdown", "id": "Library_type", "optional": 0, "short_hint": "The type of sequencing reads - single-end vs. paired-end", "ui_class": "parameter", "ui_name": "Library Type"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "sample_id", "optional": 0, "short_hint": "Select the single-end or paired-end reads files based on the type of sequencing reads.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary", "KBaseFile.SingleEndLibrary", "KBaseFile.PairedEndLibrary"]}, "ui_class": "input", "ui_name": "Reads (Single-end/Paired-end)"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "condition", "optional": 0, "short_hint": "Short label for each sample in the RNA-seq experiment. All replicates for the same condition must have same label.", "ui_class": "parameter", "ui_name": "Condition Labels"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "dropdown_options": {"options": [{"display": "Eukaryotes", "index": 0, "value": "Eukaryotes"}, {"display": "Prokaryotes", "index": 1, "value": "Prokaryotes"}]}, "field_type": "dropdown", "id": "domain", "optional": 1, "short_hint": "The domain of the genome - prokaryotes vs. eukaryotes", "ui_class": "parameter", "ui_name": "Domain"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "source", "optional": 1, "short_hint": "The source of the data used for RNA-seq experiment (e.g NCBI)", "ui_class": "parameter", "ui_name": "Source"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "publication_id", "optional": 1, "short_hint": "The publication details of the data used for RNA-seq experiment", "ui_class": "parameter", "ui_name": "Publication Details"}], "widgets": {"input": "null", "output": "kbaseRNASeqAnalysisNew"}}, "tag": "beta", "version": "1.0.0"}, "exec": {"jobState": {"awe_job_id": "a99c4f0f-0a9c-4839-ac53-f75e7e86d789", "canceled": 0, "cancelled": 0, "cell_id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "creation_time": 1505882441694, "error": {"code": -1, "error": "Fatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:207)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:393)\n", "message": "Job service side error: Output file is not found, exit code is 123", "name": "JSONRPCError"}, "exec_start_time": 1505882444943, "finish_time": 1505882455952, "finished": 1, "job_id": "59c1f149e4b009ebf20e43be", "job_state": "suspend", "run_id": null, "status": ["2017-09-20T04:40:55+0000", "error", "Job service side error: Output file is not found, exit code is 123", null, null, 1, 1], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1506214300797, "launchState": {"cell_id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "event": "launched_job", "event_at": "2017-09-20T04:40:41.704239Z", "job_id": "59c1f149e4b009ebf20e43be", "run_id": "849a1967-775f-47d7-905e-6ba623032d16"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-09-20T04:40:41.094Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-09-20T04:40:41.719Z"}, {"data": {"jobState": {"awe_job_id": "a99c4f0f-0a9c-4839-ac53-f75e7e86d789", "awe_job_state": "queued", "cell_id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "creation_time": 1505882441694, "finished": 0, "job_id": "59c1f149e4b009ebf20e43be", "job_state": "queued", "position": 3, "run_id": "849a1967-775f-47d7-905e-6ba623032d16", "status": ["2017-09-20T04:40:41+0000", "created", null, null, null, null, null], "token_id": "bb0f6ecb-c70b-4d58-96aa-b6056776b5de", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-20T04:40:41.943Z"}, {"data": {"jobState": {"awe_job_id": "a99c4f0f-0a9c-4839-ac53-f75e7e86d789", "awe_job_state": "queued", "cell_id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "creation_time": 1505882441694, "finished": 0, "job_id": "59c1f149e4b009ebf20e43be", "job_state": "queued", "position": 3, "run_id": "849a1967-775f-47d7-905e-6ba623032d16", "status": ["2017-09-20T04:40:41+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-20T04:40:42.129Z"}, {"data": {"jobState": {"awe_job_id": "a99c4f0f-0a9c-4839-ac53-f75e7e86d789", "awe_job_state": "in-progress", "cell_id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "creation_time": 1505882441694, "finished": 0, "job_id": "59c1f149e4b009ebf20e43be", "job_state": "queued", "position": 3, "run_id": "849a1967-775f-47d7-905e-6ba623032d16", "status": ["2017-09-20T04:40:41+0000", "created", null, null, null, null, null], "token_id": "bb0f6ecb-c70b-4d58-96aa-b6056776b5de", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-20T04:40:44.248Z"}, {"data": {"jobState": {"awe_job_id": "a99c4f0f-0a9c-4839-ac53-f75e7e86d789", "canceled": 0, "cancelled": 0, "cell_id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "creation_time": 1505882441694, "error": {"code": -1, "error": "Fatal error: java.lang.IllegalStateException: Output file is not found, exit code is 123\n\tat us.kbase.narrativejobservice.sdkjobs.DockerRunner.run(DockerRunner.java:207)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKLocalMethodRunner.main(SDKLocalMethodRunner.java:393)\n", "message": "Job service side error: Output file is not found, exit code is 123", "name": "JSONRPCError"}, "exec_start_time": 1505882444943, "finish_time": 1505882455952, "finished": 1, "job_id": "59c1f149e4b009ebf20e43be", "job_state": "suspend", "run_id": null, "status": ["2017-09-20T04:40:55+0000", "error", "Job service side error: Output file is not found, exit code is 123", null, null, 1, 1], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:51:40.797Z"}]}, "fsm": {"currentState": {"mode": "error", "stage": "running"}}, "newAppName": "Create RNA-seq Sample Set", "outdated": true, "output": {"byJob": {}}, "params": {"Library_type": "PairedEnd", "domain": "Prokaryotes", "platform": "", "publication_id": "", "sample_n_conditions": [{"condition": "Glucose", "sample_id": "16962/22;16837/6/1"}], "sampleset_desc": "", "sampleset_id": "Test", "source": ""}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Wed, 20 Sep 2017 04:39:31 GMT", "id": "11dfb005-4ae0-4a60-9af3-b75211c6a053", "info": {"label": "more...", "url": "/#appcatalog/app/KBaseRNASeq/describe_rnaseq_experiment/beta"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Provide RNA-seq reads and the metadata to create an RNA-seq Sample Set", "title": "Create RNA-seq Sample Set"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"KBaseRNASeq/describe_rnaseq_experiment\",\n    {\n        \"sampleset_id\": \"Test\",\n        \"sampleset_desc\": \"\",\n        \"platform\": \"\",\n        \"Library_type\": \"PairedEnd\",\n        \"sample_n_conditions\": [{\n            \"sample_id\": \"16962/22;16837/6/1\",\n            \"condition\": \"Glucose\"\n        }],\n        \"domain\": \"Prokaryotes\",\n        \"source\": \"\",\n        \"publication_id\": \"\"\n    },\n    tag=\"beta\",\n    version=\"7034d1a89302d84c9fdaaabf41cd7d1f32d12644\",\n    cell_id=\"11dfb005-4ae0-4a60-9af3-b75211c6a053\",\n    run_id=\"849a1967-775f-47d7-905e-6ba623032d16\"\n)"}, {"cell_type": "code", "execution_count": 3, "metadata": {"collapsed": true, "kbase": {"appCell": {"app": {"gitCommitHash": "30297906dc6bfc551076f79275cc8130e63fea95", "id": "kb_Bowtie2/align_reads_using_bowtie2", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "output_workspace"}, {"input_parameter": "input_ref", "target_property": "input_ref", "target_type_transform": "resolved-ref"}, {"input_parameter": "assembly_or_genome_ref", "target_property": "assembly_or_genome_ref", "target_type_transform": "resolved-ref"}, {"input_parameter": "output_obj_name_suffix", "target_property": "output_obj_name_suffix"}, {"input_parameter": "quality_score", "target_property": "quality_score"}, {"input_parameter": "alignment_type", "target_property": "alignment_type"}, {"input_parameter": "trim5", "target_property": "trim5"}, {"input_parameter": "trim3", "target_property": "trim3"}, {"input_parameter": "np", "target_property": "np"}, {"input_parameter": "preset_options", "target_property": "preset_options"}, {"input_parameter": "minins", "target_property": "minins"}, {"input_parameter": "maxins", "target_property": "maxins"}, {"input_parameter": "orientation", "target_property": "orientation"}, {"input_parameter": "condition_label", "target_property": "condition_label"}, {"input_parameter": "output_alignment_suffix", "target_property": "output_alignment_suffix"}], "kb_service_method": "align_reads_to_assembly_app", "kb_service_name": "kb_Bowtie2", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace"}, {"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"service_method_output_path": ["0", "report_info", "report_name"], "target_property": "report_name"}, {"service_method_output_path": ["0", "report_info", "report_ref"], "target_property": "report_ref"}], "kb_service_url": "", "kb_service_version": "30297906dc6bfc551076f79275cc8130e63fea95"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": [], "categories": ["active", "expression", "sequence"], "git_commit_hash": "30297906dc6bfc551076f79275cc8130e63fea95", "icon": {"url": "img?method_id=kb_Bowtie2/align_reads_using_bowtie2&image_name=bowtie-cyan.png&tag=dev"}, "id": "kb_Bowtie2/align_reads_using_bowtie2", "input_types": ["KBaseAssembly.PairedEndLibrary", "KBaseAssembly.SingleEndLibrary", "KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary", "KBaseGenomeAnnotations.Assembly", "KBaseGenomes.ContigSet", "KBaseGenomes.Genome", "KBaseRNASeq.RNASeqSampleSet", "KBaseSets.ReadsSet"], "module_name": "kb_Bowtie2", "name": "Align Reads using Bowtie2 v2.3.2", "namespace": "kb_Bowtie2", "output_types": [], "subtitle": "Align sequencing reads to long reference prokaryotic genome sequences using Bowtie2", "tooltip": "Align sequencing reads to long reference prokaryotic genome sequences using Bowtie2", "ver": "0.3.3"}, "job_id_output_field": "docker", "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "input_ref", "optional": 0, "short_hint": "Select the RNA-seq SampleSet or ReadsSet. If you have only one sample of RNA-seq reads, select the corresponding library object.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseSets.ReadsSet", "KBaseRNASeq.RNASeqSampleSet", "KBaseAssembly.SingleEndLibrary", "KBaseAssembly.PairedEndLibrary", "KBaseFile.SingleEndLibrary", "KBaseFile.PairedEndLibrary"]}, "ui_class": "input", "ui_name": "RNA-seq SampleSet or Read Library"}, {"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "", "disabled": 0, "field_type": "text", "id": "assembly_or_genome_ref", "optional": 0, "short_hint": "Select the assembly or genome on which to align to", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseGenomes.Genome", "KBaseGenomeAnnotations.Assembly", "KBaseGenomes.ContigSet"]}, "ui_class": "input", "ui_name": "Assembly or Genome"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["_alignment_set"], "description": "", "disabled": 0, "field_type": "text", "id": "output_obj_name_suffix", "optional": 0, "short_hint": "Provide the suffix used for the output reads alignment set name", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": [], "valid_ws_types": []}, "ui_class": "parameter", "ui_name": "Output Alignment Set Name Suffix"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["phred33"], "description": "phred33 is used by Illumina starting with v1.8", "disabled": 0, "dropdown_options": {"options": [{"display": "phred33", "index": 0, "value": "phred33"}, {"display": "phred64", "index": 1, "value": "phred64"}]}, "field_type": "dropdown", "id": "quality_score", "optional": 1, "short_hint": "Select the quality score type depending on the sequencing platform", "ui_class": "parameter", "ui_name": "Alignment Quality Score Type"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["end-to-end"], "description": "By default, Bowtie2 performs end-to-end read alignment. It searches for alignments involving all of read characters. For local option, it can clip some read characters from one or both ends of the alignment to maximize the alignment score.", "disabled": 0, "dropdown_options": {"options": [{"display": "end-to-end", "index": 0, "value": "end-to-end"}, {"display": "local", "index": 1, "value": "local"}]}, "field_type": "dropdown", "id": "alignment_type", "optional": 1, "short_hint": "Select the alignment type", "ui_class": "parameter", "ui_name": "Alignment Type"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Trim the base-pairs from 5' end before alignment, if needed. By default, it is 0.", "disabled": 0, "field_type": "text", "id": "trim5", "optional": 1, "short_hint": "Trim the base-pairs from 5' (left) end of each read before alignment", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Trim Bases From 5'end"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "Trim the base-pairs from 3' end before alignment, if needed. By default, it is 0.", "disabled": 0, "field_type": "text", "id": "trim3", "optional": 1, "short_hint": "Trim the base-pairs from 3' (right) end of each read before alignment", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Trim Bases From 3'end"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["1"], "description": "By default, penalty is 1.", "disabled": 0, "field_type": "text", "id": "np", "optional": 1, "short_hint": "Sets the penalty for positions where the read, reference, or both, contain an ambiguous character such as N.", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Penalty"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "Faster option is generally less sensitive and vice versa.", "disabled": 0, "dropdown_options": {"options": [{"display": "sensitive", "index": 0, "value": "sensitive"}, {"display": "very-sensitive", "index": 1, "value": "very-sensitive"}, {"display": "fast", "index": 2, "value": "fast"}, {"display": "very-fast", "index": 3, "value": "very-fast"}]}, "field_type": "dropdown", "id": "preset_options", "optional": 1, "short_hint": "Select the preset options based on alignment type", "ui_class": "parameter", "ui_name": "Alignment Type Preset Options"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["0"], "description": "By default, 0 is used.", "disabled": 0, "field_type": "text", "id": "minins", "optional": 1, "short_hint": "Select the minimum fragment length for valid untrimmed paired-end alignments", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Minimum Fragment Length For Paired-end Alignments"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["500"], "description": "By default, 500 is used.", "disabled": 0, "field_type": "text", "id": "maxins", "optional": 1, "short_hint": "Select the maximum fragment length for valid untrimmed paired-end alignments", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "validate_as": "int"}, "ui_class": "parameter", "ui_name": "Maximum Fragment Length For Paired-end Alignments"}, {"advanced": 1, "allow_multiple": 0, "default_values": [""], "description": "By default, fr is used.", "disabled": 0, "dropdown_options": {"options": [{"display": "fr", "index": 0, "value": "fr"}, {"display": "rf", "index": 1, "value": "rf"}, {"display": "ff", "index": 2, "value": "ff"}]}, "field_type": "dropdown", "id": "orientation", "optional": 1, "short_hint": "Select the upstream/downstream mate orientations for a valid paired-end alignments against the forward reference strand.", "ui_class": "parameter", "ui_name": "Orientation"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["unknown"], "description": "", "disabled": 0, "field_type": "text", "id": "condition_label", "optional": 1, "short_hint": "If you run on a single Reads Library, and want to specify a condition label in the alignment, set this paramter", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Condition Label for Single Library Run"}, {"advanced": 1, "allow_multiple": 0, "default_values": ["_alignment"], "description": "", "disabled": 0, "field_type": "text", "id": "output_alignment_suffix", "optional": 1, "short_hint": "Individual alignments will be given names based on the reads object name appended with this extension", "text_options": {"is_output_name": 1, "placeholder": "", "regex_constraint": []}, "ui_class": "parameter", "ui_name": "Alignment output name suffix"}], "widgets": {"input": "null", "output": "no-display"}}, "tag": "dev", "version": "0.3.3"}, "exec": {"jobState": {"cell_id": "23cc4fac-7712-492e-9de5-a3bb94eff412", "error": {"code": -32603, "error": "KBase execution engine returned an error while looking up this job.", "exception": {"error_message": "Job lookup in execution engine failed", "error_stacktrace": "java.lang.NullPointerException\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJobCondor(SDKMethodRunner.java:821)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJob(SDKMethodRunner.java:689)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJobs(SDKMethodRunner.java:964)\n\tat us.kbase.narrativejobservice.NarrativeJobServiceServer.checkJobs(NarrativeJobServiceServer.java:636)\n\tat sun.reflect.GeneratedMethodAccessor88.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat us.kbase.common.service.JsonServerServlet.processRpcCall(JsonServerServlet.java:610)\n\tat us.kbase.narrativejobservice.NarrativeJobServiceServer.processRpcCall(NarrativeJobServiceServer.java:209)\n\tat us.kbase.common.service.JsonServerServlet.doPost(JsonServerServlet.java:463)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:856)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:535)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1253)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1155)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:219)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:531)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:352)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:281)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:754)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:672)\n\tat java.lang.Thread.run(Thread.java:748)\n", "error_type": "NullPointerException"}, "message": "No error message available", "name": "Job Error"}, "job_state": "error", "run_id": "df5b9902-df9c-4430-95a3-9dab427bdbb0"}, "jobStateUpdated": 1539726293267, "launchState": {"cell_id": "23cc4fac-7712-492e-9de5-a3bb94eff412", "event": "launched_job", "event_at": "2017-09-24T00:59:38.107071Z", "job_id": "59c7037ae4b0d549f125557e", "run_id": "df5b9902-df9c-4430-95a3-9dab427bdbb0"}, "log": [{"data": {"runId": "should be here"}, "event": "execute-requested", "timestamp": "2017-09-24T00:59:33.387Z"}, {"data": {"status": "launched_job"}, "event": "launch-status", "timestamp": "2017-09-24T00:59:34.149Z"}, {"data": {"jobState": {"awe_job_id": "d0a59906-3fd5-4e72-8111-d136d56d28b5", "awe_job_state": "queued", "cell_id": "23cc4fac-7712-492e-9de5-a3bb94eff412", "creation_time": 1506214778098, "finished": 0, "job_id": "59c7037ae4b0d549f125557e", "job_state": "queued", "position": 4, "run_id": "df5b9902-df9c-4430-95a3-9dab427bdbb0", "status": ["2017-09-24T00:59:38+0000", "created", null, null, null, null, null], "token_id": "4bb91f25-cd33-4f37-b444-7ea41024aa47", "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:59:34.272Z"}, {"data": {"jobState": {"awe_job_id": "d0a59906-3fd5-4e72-8111-d136d56d28b5", "awe_job_state": "in-progress", "cell_id": "23cc4fac-7712-492e-9de5-a3bb94eff412", "creation_time": 1506214778098, "finished": 0, "job_id": "59c7037ae4b0d549f125557e", "job_state": "queued", "position": 4, "run_id": "df5b9902-df9c-4430-95a3-9dab427bdbb0", "status": ["2017-09-24T00:59:38+0000", "created", null, null, null, null, null], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}}, "event": "job-status", "timestamp": "2017-09-24T00:59:36.931Z"}], "outputWidgetInfo": {}}, "fsm": {"currentState": {"mode": "error"}}, "newAppName": "Align Reads using Bowtie2 v2.3.2", "outdated": true, "output": {"byJob": {}}, "params": {"alignment_type": "end-to-end", "assembly_or_genome_ref": "micrococcus_leteus.contigs", "condition_label": "unknown", "input_ref": "micrococcus.RNASeqData", "maxins": 500, "minins": 0, "np": 1, "orientation": "", "output_alignment_suffix": "_alignment", "output_obj_name_suffix": "_alignment_set", "preset_options": "", "quality_score": "phred33", "trim3": 0, "trim5": 0}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Sun, 24 Sep 2017 00:58:34 GMT", "id": "23cc4fac-7712-492e-9de5-a3bb94eff412", "info": {"label": "more...", "url": "/#appcatalog/app/kb_Bowtie2/align_reads_using_bowtie2/dev"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Align sequencing reads to long reference prokaryotic genome sequences using Bowtie2", "title": "Align Reads using Bowtie2 v2.3.2"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Bowtie2/align_reads_using_bowtie2\",\n    {\n        \"input_ref\": \"micrococcus.RNASeqData\",\n        \"assembly_or_genome_ref\": \"micrococcus_leteus.contigs\",\n        \"output_obj_name_suffix\": \"_alignment_set\",\n        \"quality_score\": \"phred33\",\n        \"alignment_type\": \"end-to-end\",\n        \"trim5\": 0,\n        \"trim3\": 0,\n        \"np\": 1,\n        \"preset_options\": \"\",\n        \"minins\": 0,\n        \"maxins\": 500,\n        \"orientation\": \"\",\n        \"condition_label\": \"unknown\",\n        \"output_alignment_suffix\": \"_alignment\"\n    },\n    tag=\"dev\",\n    version=\"30297906dc6bfc551076f79275cc8130e63fea95\",\n    cell_id=\"23cc4fac-7712-492e-9de5-a3bb94eff412\",\n    run_id=\"df5b9902-df9c-4430-95a3-9dab427bdbb0\"\n)"}, {"cell_type": "code", "execution_count": null, "metadata": {"kbase": {"appCell": {"app": {"gitCommitHash": "6a66886b075ed4c3002f6dc5b20c657737bf2777", "id": "kb_staging_exporter/export_to_staging", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "input_ref", "target_property": "input_ref", "target_type_transform": "resolved-ref"}, {"input_parameter": "export_alignment", "target_property": "export_alignment"}, {"input_parameter": "export_genome", "target_property": "export_genome"}, {"input_parameter": "destination_dir", "target_property": "destination_dir"}, {"constant_value": 1, "target_property": "generate_report"}], "kb_service_method": "export_to_staging", "kb_service_name": "kb_staging_exporter", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "wsName"}, {"service_method_output_path": ["0", "network_obj_ref"], "target_property": "network_obj_ref"}, {"service_method_output_path": ["0", "report_name"], "target_property": "report_name"}, {"service_method_output_path": ["0", "report_ref"], "target_property": "report_ref"}, {"constant_value": "16", "target_property": "report_window_line_height"}], "kb_service_url": "", "kb_service_version": "6a66886b075ed4c3002f6dc5b20c657737bf2777"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["tgu2"], "categories": ["active", "util"], "git_commit_hash": "6a66886b075ed4c3002f6dc5b20c657737bf2777", "icon": {"url": "img?method_id=kb_staging_exporter/export_to_staging&image_name=data-yellow.png&tag=beta"}, "id": "kb_staging_exporter/export_to_staging", "input_types": ["KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary", "KBaseGenomeAnnotations.Assembly", "KBaseGenomes.Genome", "KBaseRNASeq.RNASeqAlignment"], "module_name": "kb_staging_exporter", "name": "Export Data Object To Staging Area", "namespace": "kb_staging_exporter", "output_types": [], "subtitle": "Export file(s) associated with an object to Staging Area", "tooltip": "Export file(s) associated with an object to Staging Area", "ver": "0.0.1"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 1, "allow_multiple": 0, "description": "", "id": "export_alignment", "optional": 1, "parameter_ids": ["export_alignment_bam", "export_alignment_sam"], "short_hint": "Export Alignment workspace object", "ui_name": "Export Alignment", "with_border": 0}, {"advanced": 1, "allow_multiple": 0, "description": "", "id": "export_genome", "optional": 1, "parameter_ids": ["export_genome_genbank", "export_genome_gff"], "short_hint": "Export Genome workspace object", "ui_name": "Export Genome", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Input orkspace object reference", "disabled": 0, "field_type": "text", "id": "input_ref", "optional": 0, "short_hint": "Input orkspace object reference", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseFile.SingleEndLibrary", "KBaseFile.PairedEndLibrary", "KBaseGenomeAnnotations.Assembly", "KBaseRNASeq.RNASeqAlignment", "KBaseGenomes.Genome"]}, "ui_class": "input", "ui_name": "Input Object"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Export Alignment as BAM file", "disabled": 0, "field_type": "checkbox", "id": "export_alignment_bam", "optional": 0, "short_hint": "Export Alignment as BAM file", "ui_class": "parameter", "ui_name": "BAM"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Export Alignment as SAM file", "disabled": 0, "field_type": "checkbox", "id": "export_alignment_sam", "optional": 0, "short_hint": "Export Alignment as SAM file", "ui_class": "parameter", "ui_name": "SAM"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Export Genome as GENBANK file", "disabled": 0, "field_type": "checkbox", "id": "export_genome_genbank", "optional": 0, "short_hint": "Export Genome as GENBANK file", "ui_class": "parameter", "ui_name": "GENBANK"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Export Genome as GFF", "disabled": 0, "field_type": "checkbox", "id": "export_genome_gff", "optional": 0, "short_hint": "Export Genome as GFF", "ui_class": "parameter", "ui_name": "GFF"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["workspace_export"], "description": "Destination directory file(s) is saving to", "disabled": 0, "field_type": "text", "id": "destination_dir", "optional": 0, "short_hint": "Destination directory file(s) is saving to", "ui_class": "parameter", "ui_name": "Destination Directory"}], "widgets": {"input": "null", "output": "no-display"}}, "tag": "beta", "version": "0.0.1"}, "fsm": {"currentState": {"code": "built", "mode": "editing", "params": "complete"}}, "output": {"byJob": {}}, "params": {"destination_dir": "workspace_export", "export_alignment": null, "export_genome": null, "input_ref": "pyridine_sample_3_hisat2_alignment"}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Tue, 16 Oct 2018 21:45:13 GMT", "id": "f589c425-4762-44ca-82ec-8359364bb403", "info": {"label": "more...", "url": "/#appcatalog/app/kb_staging_exporter/export_to_staging/beta"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Export file(s) associated with an object to Staging Area", "title": "Export Data Object To Staging Area"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_staging_exporter/export_to_staging\",\n    {\n        \"input_ref\": \"pyridine_sample_3_hisat2_alignment\",\n        \"export_alignment\": None,\n        \"export_genome\": None,\n        \"destination_dir\": \"workspace_export\"\n    },\n    tag=\"beta\",\n    version=\"6a66886b075ed4c3002f6dc5b20c657737bf2777\",\n    cell_id=\"f589c425-4762-44ca-82ec-8359364bb403\",\n    run_id=\"fa720fb0-0fe7-41d1-9b2a-1fe8c72d15d6\"\n)"}, {"cell_type": "code", "execution_count": 1, "metadata": {"kbase": {"appCell": {"app": {"gitCommitHash": "6a66886b075ed4c3002f6dc5b20c657737bf2777", "id": "kb_staging_exporter/export_to_staging", "spec": {"behavior": {"kb_service_input_mapping": [{"narrative_system_variable": "workspace", "target_property": "workspace_name"}, {"input_parameter": "input_ref", "target_property": "input_ref", "target_type_transform": "resolved-ref"}, {"input_parameter": "export_alignment", "target_property": "export_alignment"}, {"input_parameter": "export_genome", "target_property": "export_genome"}, {"input_parameter": "destination_dir", "target_property": "destination_dir"}, {"constant_value": 1, "target_property": "generate_report"}], "kb_service_method": "export_to_staging", "kb_service_name": "kb_staging_exporter", "kb_service_output_mapping": [{"narrative_system_variable": "workspace", "target_property": "wsName"}, {"service_method_output_path": ["0", "network_obj_ref"], "target_property": "network_obj_ref"}, {"service_method_output_path": ["0", "report_name"], "target_property": "report_name"}, {"service_method_output_path": ["0", "report_ref"], "target_property": "report_ref"}, {"constant_value": "16", "target_property": "report_window_line_height"}], "kb_service_url": "", "kb_service_version": "6a66886b075ed4c3002f6dc5b20c657737bf2777"}, "fixed_parameters": [], "info": {"app_type": "app", "authors": ["tgu2"], "categories": ["active", "util"], "git_commit_hash": "6a66886b075ed4c3002f6dc5b20c657737bf2777", "icon": {"url": "img?method_id=kb_staging_exporter/export_to_staging&image_name=data-yellow.png&tag=beta"}, "id": "kb_staging_exporter/export_to_staging", "input_types": ["KBaseFile.PairedEndLibrary", "KBaseFile.SingleEndLibrary", "KBaseGenomeAnnotations.Assembly", "KBaseGenomes.Genome", "KBaseRNASeq.RNASeqAlignment"], "module_name": "kb_staging_exporter", "name": "Export Data Object To Staging Area", "namespace": "kb_staging_exporter", "output_types": [], "subtitle": "Export file(s) associated with an object to Staging Area", "tooltip": "Export file(s) associated with an object to Staging Area", "ver": "0.0.1"}, "job_id_output_field": "docker", "parameter_groups": [{"advanced": 1, "allow_multiple": 0, "description": "", "id": "export_alignment", "optional": 1, "parameter_ids": ["export_alignment_bam", "export_alignment_sam"], "short_hint": "Export Alignment workspace object", "ui_name": "Export Alignment", "with_border": 0}, {"advanced": 1, "allow_multiple": 0, "description": "", "id": "export_genome", "optional": 1, "parameter_ids": ["export_genome_genbank", "export_genome_gff"], "short_hint": "Export Genome workspace object", "ui_name": "Export Genome", "with_border": 0}], "parameters": [{"advanced": 0, "allow_multiple": 0, "default_values": [""], "description": "Input orkspace object reference", "disabled": 0, "field_type": "text", "id": "input_ref", "optional": 0, "short_hint": "Input orkspace object reference", "text_options": {"is_output_name": 0, "placeholder": "", "regex_constraint": [], "valid_ws_types": ["KBaseFile.SingleEndLibrary", "KBaseFile.PairedEndLibrary", "KBaseGenomeAnnotations.Assembly", "KBaseRNASeq.RNASeqAlignment", "KBaseGenomes.Genome"]}, "ui_class": "input", "ui_name": "Input Object"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Export Alignment as BAM file", "disabled": 0, "field_type": "checkbox", "id": "export_alignment_bam", "optional": 0, "short_hint": "Export Alignment as BAM file", "ui_class": "parameter", "ui_name": "BAM"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Export Alignment as SAM file", "disabled": 0, "field_type": "checkbox", "id": "export_alignment_sam", "optional": 0, "short_hint": "Export Alignment as SAM file", "ui_class": "parameter", "ui_name": "SAM"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["1"], "description": "Export Genome as GENBANK file", "disabled": 0, "field_type": "checkbox", "id": "export_genome_genbank", "optional": 0, "short_hint": "Export Genome as GENBANK file", "ui_class": "parameter", "ui_name": "GENBANK"}, {"advanced": 1, "allow_multiple": 0, "checkbox_options": {"checked_value": 1, "unchecked_value": 0}, "default_values": ["0"], "description": "Export Genome as GFF", "disabled": 0, "field_type": "checkbox", "id": "export_genome_gff", "optional": 0, "short_hint": "Export Genome as GFF", "ui_class": "parameter", "ui_name": "GFF"}, {"advanced": 0, "allow_multiple": 0, "default_values": ["workspace_export"], "description": "Destination directory file(s) is saving to", "disabled": 0, "field_type": "text", "id": "destination_dir", "optional": 0, "short_hint": "Destination directory file(s) is saving to", "ui_class": "parameter", "ui_name": "Destination Directory"}], "widgets": {"input": "null", "output": "no-display"}}, "tag": "beta", "version": "0.0.1"}, "exec": {"jobState": {"awe_job_state": "in-progress", "cell_id": "ef6aa5d8-93b1-4d14-ace2-dffca40ba7d1", "child_jobs": [], "creation_time": 1539726348990, "exec_start_time": 1539726534214, "finished": 0, "job_id": "5bc65c06e4b0d417818a320b", "job_state": "in-progress", "run_id": "24571c14-44ac-4bd2-ba88-3273cd8c660b", "status": ["2018-10-16T21:48:54+0000", "started", "running", null, null, 0, 0], "sub_jobs": [], "ujs_url": "https://ci.kbase.us/services/userandjobstate/"}, "jobStateUpdated": 1539727046028, "launchState": {"cell_id": "ef6aa5d8-93b1-4d14-ace2-dffca40ba7d1", "event": "launched_job", "event_at": "2018-10-16T21:45:49.024518Z", "job_id": "5bc65c06e4b0d417818a320b", "run_id": "24571c14-44ac-4bd2-ba88-3273cd8c660b"}}, "fsm": {"currentState": {"mode": "processing", "stage": "running"}}, "output": {"byJob": {}}, "params": {"destination_dir": "workspace_export", "export_alignment": null, "export_genome": null, "input_ref": "16962/22;16003/3/1"}, "user-settings": {"showCodeInputArea": false}}, "attributes": {"created": "Tue, 16 Oct 2018 21:45:29 GMT", "id": "ef6aa5d8-93b1-4d14-ace2-dffca40ba7d1", "info": {"label": "more...", "url": "/#appcatalog/app/kb_staging_exporter/export_to_staging/beta"}, "lastLoaded": "Thu, 18 Oct 2018 00:10:44 GMT", "status": "new", "subtitle": "Export file(s) associated with an object to Staging Area", "title": "Export Data Object To Staging Area"}, "type": "app"}}, "outputs": [], "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_staging_exporter/export_to_staging\",\n    {\n        \"input_ref\": \"16962/22;16003/3/1\",\n        \"export_alignment\": None,\n        \"export_genome\": None,\n        \"destination_dir\": \"workspace_export\"\n    },\n    tag=\"beta\",\n    version=\"6a66886b075ed4c3002f6dc5b20c657737bf2777\",\n    cell_id=\"ef6aa5d8-93b1-4d14-ace2-dffca40ba7d1\",\n    run_id=\"24571c14-44ac-4bd2-ba88-3273cd8c660b\"\n)"}], "metadata": {"creator": "jplfaria", "data_dependencies": [], "description": "", "format": "ipynb", "is_temporary": "false", "job_ids": {"apps": [], "job_usage": {"queue_time": 0, "run_time": 0}, "methods": []}, "kbase": {"creator": "jplfaria", "job_ids": {"apps": [], "job_usage": {"queue_time": 0, "run_time": 0}, "methods": []}, "name": "Untitled", "userSettings": {}, "ws_name": "jplfaria:1485469584244"}, "kernelspec": {"display_name": "Python 2", "language": "python", "name": "python2"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 2}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython2", "version": "2.7.14"}, "name": "RNASeq Analysis - Jose", "type": "KBaseNarrative.Narrative", "ws_name": "scanon:narrative_1485560571814"}, "nbformat": 4, "nbformat_minor": 1}, "info": [23, "Narrative.1485469584244", "KBaseNarrative.Narrative-4.0", "2018-10-18T00:12:42+0000", 20, "scanon", 16962, "scanon:narrative_1485560571814", "724af252a3e8c1d28b9795c1ea239040", 182106, {"creator": "jplfaria", "method.KBaseRNASeq/align_reads_using_hisat2/67dc758b67bd79c8140ea9965022c35401868e5f": "2", "data_dependencies": "[]", "jupyter.markdown": "7", "job_info": "{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}", "method.KBaseRNASeq/build_bowtie2_index/67dc758b67bd79c8140ea9965022c35401868e5f": "1", "format": "ipynb", "description": "", "type": "KBaseNarrative.Narrative", "method.kb_Bowtie2/align_reads_using_bowtie2/30297906dc6bfc551076f79275cc8130e63fea95": "1", "method.kb_uploadmethods/load_paired_end_reads_from_URL/aabbeb7e44f6988254a5477ec11e42584a5c39c1": "3", "method.EditorApps/reads_set_editor/a3d855c161b183b4931290c6dbd1ae32f9c44fdb": "1", "method.RAST_SDK/annotate_contigset/9413cb5a4c229cb4cee44dd910d70b026ec0dced": "1", "method.kb_util_dylan/KButil_Build_ReadsSet/06cc3554899395bc0904e262eae9a61b61474f51": "1", "method.kb_staging_exporter/export_to_staging/6a66886b075ed4c3002f6dc5b20c657737bf2777": "2", "is_temporary": "false", "method.KBaseRNASeq/describe_rnaseq_experiment/7034d1a89302d84c9fdaaabf41cd7d1f32d12644": "1", "name": "RNASeq Analysis - Jose", "method.KBaseRNASeq/describe_rnaseq_experiment/5a54b8d1aeb6598b2aacccac7c053d2b6a015538": "1", "ws_name": "scanon:narrative_1485560571814"}], "path": ["16962/23/20"], "provenance": [{"service": "narrative", "service_ver": "3.8.3", "input_ws_objects": [], "resolved_ws_objects": [], "external_data": [], "subactions": [], "custom": {}, "description": "Saved by KBase Narrative Interface"}], "creator": "scanon", "orig_wsid": 16962, "created": "2018-10-18T00:12:42+0000", "epoch": 1539821562230, "refs": [], "copy_source_inaccessible": 0, "extracted_ids": {}}]}